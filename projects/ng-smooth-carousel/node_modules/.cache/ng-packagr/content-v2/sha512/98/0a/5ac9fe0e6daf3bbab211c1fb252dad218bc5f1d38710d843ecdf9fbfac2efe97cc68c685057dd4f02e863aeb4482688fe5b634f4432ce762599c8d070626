{"hash":"0118d720bff3b2ace933ef7bd5df7702a974547c","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Component, Input, ContentChild, ViewChild, HostListener, NgModule } from '@angular/core';\nimport { Subject, fromEvent } from 'rxjs';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\n\n/**\n * A smooth, customizable carousel component for Angular applications.\n *\n * @description\n * This component provides a flexible carousel/slider with the following features:\n * - Horizontal and vertical orientations\n * - Customizable navigation buttons with different shapes and styles\n * - Search functionality with filtering\n * - Responsive design with configurable item sizes\n * - Custom item templates\n * - Autoplay with configurable delay\n * - Loop functionality\n *\n * @example\n * ```html\n * <nsc\n *   [items]=\"items\"\n *   [config]=\"{\n *     orientation: 'horizontal',\n *     navigationStyle: {\n *       buttonShape: 'rounded',\n *       nextButton: { color: '#333' },\n *       prevButton: { color: '#333' }\n *     }\n *   }\">\n *   <ng-template #carouselItem let-item>\n *     {{ item }}\n *   </ng-template>\n * </nsc>\n * ```\n */\nclass CarouselComponent {\n    constructor(cdr) {\n        this.cdr = cdr;\n        this.items = [];\n        this.config = {};\n        this.currentTranslate = 0;\n        this.currentIndex = 0;\n        this.destroy$ = new Subject();\n        this.itemWidths = [];\n        this.scrollSizeMap = {\n            'xs': 50,\n            'sm': 100,\n            'md': 150,\n            'lg': 200,\n            'xl': 250,\n            '2xl': 300,\n            '3xl': 350,\n            '4xl': 400,\n            '5xl': 450,\n            '6xl': 500,\n            '7xl': 550,\n            '8xl': 600,\n            '9xl': 650,\n            '10xl': 700,\n            'full': 1,\n        };\n        this.showPrevButton = false;\n        this.showNextButton = false;\n        this.searchQuery = '';\n        this.isSearchModalOpen = false;\n        this.filteredItems = [];\n    }\n    ngOnInit() {\n        this.filteredItems = this.items;\n    }\n    parseTimeToMs(time) {\n        if (time.endsWith('ms')) {\n            return parseInt(time.slice(0, -2), 10);\n        }\n        if (time.endsWith('s')) {\n            return parseFloat(time.slice(0, -1)) * 1000;\n        }\n        return parseInt(time, 10);\n    }\n    setupAutoplay() {\n        if (this.autoplayInterval) {\n            clearInterval(this.autoplayInterval);\n        }\n        if (!this.config.autoplay)\n            return;\n        const delay = this.parseTimeToMs(this.config.autoplayDelay || '3000ms');\n        this.autoplayInterval = setInterval(() => {\n            const track = this.trackElement?.nativeElement;\n            const wrapper = this.wrapperElement?.nativeElement;\n            if (!track || !wrapper)\n                return;\n            const maxTranslate = this.isVertical\n                ? track.offsetHeight - wrapper.offsetHeight\n                : track.offsetWidth - wrapper.offsetWidth;\n            if (this.currentTranslate >= maxTranslate) {\n                if (this.config.loop) {\n                    this.currentTranslate = 0;\n                }\n                else {\n                    clearInterval(this.autoplayInterval);\n                    return;\n                }\n            }\n            else {\n                this.next();\n            }\n            this.cdr.detectChanges();\n        }, delay);\n    }\n    ngAfterViewInit() {\n        this.initializeCarousel();\n        this.setupResizeListener();\n        this.setupAutoplay();\n        setTimeout(() => {\n            this.calculateItemWidths();\n            this.checkOverflow();\n        });\n    }\n    ngOnDestroy() {\n        if (this.autoplayInterval) {\n            clearInterval(this.autoplayInterval);\n        }\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    get isVertical() {\n        return this.config.orientation === 'vertical';\n    }\n    get containerStyles() {\n        return {\n            width: this.config.containerWidth || '100%',\n            height: this.config.containerHeight || 'auto',\n        };\n    }\n    get trackStyles() {\n        const baseStyles = {\n            transform: this.isVertical\n                ? `translateY(-${this.currentTranslate}px)`\n                : `translateX(-${this.currentTranslate}px)`,\n        };\n        return this.isVertical\n            ? { ...baseStyles, flexDirection: 'column' }\n            : baseStyles;\n    }\n    initializeCarousel() {\n        if (!this.trackElement || !this.wrapperElement)\n            return;\n        this.currentTranslate = 0;\n        this.checkOverflow();\n    }\n    setupResizeListener() {\n        fromEvent(window, 'resize')\n            .pipe(debounceTime(200), takeUntil(this.destroy$))\n            .subscribe(() => {\n            this.checkOverflow();\n        });\n    }\n    checkOverflow() {\n        if (!this.showNavigation) {\n            this.showPrevButton = false;\n            this.showNextButton = false;\n            return;\n        }\n        const track = this.trackElement?.nativeElement;\n        const wrapper = this.wrapperElement?.nativeElement;\n        if (!track || !wrapper)\n            return;\n        if (this.config.enableOneItemScroll) {\n            this.showPrevButton = this.currentIndex > 0;\n            this.showNextButton = this.currentIndex < this.filteredItems.length - 1;\n        }\n        else if (this.isVertical) {\n            this.showPrevButton = this.currentTranslate > 0;\n            this.showNextButton =\n                track.offsetHeight - this.currentTranslate > wrapper.offsetHeight;\n        }\n        else {\n            this.showPrevButton = this.currentTranslate > 0;\n            this.showNextButton =\n                track.offsetWidth - this.currentTranslate > wrapper.offsetWidth;\n        }\n        this.cdr.detectChanges();\n    }\n    calculateItemWidths() {\n        if (!this.trackElement || !this.wrapperElement)\n            return;\n        const track = this.trackElement.nativeElement;\n        const wrapper = this.wrapperElement.nativeElement;\n        const items = Array.from(track.children);\n        // When items should take up 100% of parent width\n        if (this.config.itemWidth === '100%' && this.config.enableOneItemScroll) {\n            // Just use the parent width for all items\n            const parentWidth = wrapper.offsetWidth;\n            this.itemWidths = items.map(() => parentWidth);\n            return;\n        }\n        this.itemWidths = items.map(item => {\n            // Get the full width including margins\n            const style = window.getComputedStyle(item);\n            const width = item.offsetWidth;\n            const marginLeft = parseInt(style.marginLeft || '0', 10);\n            const marginRight = parseInt(style.marginRight || '0', 10);\n            return width + marginLeft + marginRight;\n        });\n    }\n    getScrollAmount() {\n        if (this.config.enableOneItemScroll && this.itemWidths.length > 0) {\n            if (this.currentIndex < this.itemWidths.length) {\n                return this.itemWidths[this.currentIndex];\n            }\n            // Fallback to the first item's width if currentIndex is out of bounds\n            return this.itemWidths[0] || this.wrapperElement.nativeElement.offsetWidth;\n        }\n        const size = this.config.scrollSize || 'sm';\n        // If scrollSize is numeric, use it as the number of items to scroll\n        if (size === 'full') {\n            // Use the wrapper's width (parent container) instead of the screen width\n            return this.wrapperElement.nativeElement.offsetWidth;\n        }\n        return this.scrollSizeMap[size] || this.scrollSizeMap['sm'];\n    }\n    previous() {\n        if (this.config.enableOneItemScroll) {\n            if (this.currentIndex > 0) {\n                this.currentIndex--;\n                // Calculate the exact position based on previous item widths\n                if (this.currentIndex === 0) {\n                    // If we're at the first item, ensure we're at the beginning\n                    this.currentTranslate = 0;\n                }\n                else {\n                    // Calculate position based on widths of all previous items plus gaps\n                    const itemWidth = this.itemWidths[this.currentIndex] || this.wrapperElement.nativeElement.offsetWidth;\n                    // If we have gaps, consider them too\n                    const gapWidth = this.config.itemGap ?\n                        parseInt(this.config.itemGap.replace('px', ''), 10) : 0;\n                    this.currentTranslate = this.currentIndex * (itemWidth + gapWidth);\n                }\n            }\n        }\n        else {\n            const scrollAmount = this.getScrollAmount();\n            this.currentTranslate = Math.max(0, this.currentTranslate - scrollAmount);\n        }\n        this.checkOverflow();\n    }\n    next() {\n        const track = this.trackElement.nativeElement;\n        const wrapper = this.wrapperElement.nativeElement;\n        if (this.config.enableOneItemScroll) {\n            if (this.currentIndex < this.filteredItems.length - 1) {\n                // Get the width of the current item\n                const itemWidth = this.itemWidths[this.currentIndex] || wrapper.offsetWidth;\n                // If we have gaps, consider them too\n                const gapWidth = this.config.itemGap ?\n                    parseInt(this.config.itemGap.replace('px', ''), 10) : 0;\n                this.currentIndex++;\n                // Calculate position based on all previous items plus gaps\n                if (this.config.itemWidth === '100%') {\n                    // For 100% width items, simply multiply by the index\n                    this.currentTranslate = this.currentIndex * (itemWidth + gapWidth);\n                }\n                else {\n                    // For variable width items, add the current item width\n                    this.currentTranslate += itemWidth + gapWidth;\n                }\n            }\n        }\n        else {\n            const scrollAmount = this.getScrollAmount();\n            const maxTranslate = this.isVertical\n                ? track.offsetHeight - wrapper.offsetHeight\n                : track.offsetWidth - wrapper.offsetWidth;\n            this.currentTranslate = Math.min(maxTranslate, this.currentTranslate + scrollAmount);\n        }\n        this.checkOverflow();\n    }\n    /**\n     * Gets the button shape styles based on configuration.\n     * @private\n     * @returns {Record<string, string>} The button shape styles\n     */\n    getButtonShapeStyles() {\n        const shape = this.config.navigationStyle?.buttonShape;\n        // If borderRadius is explicitly set in button styles, warn about conflict\n        if (this.config.navigationStyle?.nextButton?.['borderRadius'] ||\n            this.config.navigationStyle?.prevButton?.['borderRadius'] ||\n            this.config.searchStyle?.button?.['borderRadius']) {\n            console.warn('Both buttonShape and borderRadius are set. buttonShape will take precedence.');\n        }\n        switch (shape) {\n            case 'circle':\n                return { borderRadius: '50%' };\n            case 'rounded':\n                return { borderRadius: '4px' };\n            case 'square':\n            default:\n                return { borderRadius: '0' };\n        }\n    }\n    /**\n     * Gets the styles for the next navigation button.\n     * @returns {Record<string, string>} The button styles\n     */\n    get nextButtonStyles() {\n        const buttonStyles = { ...(this.config.navigationStyle?.nextButton || {}) };\n        const shapeStyles = this.getButtonShapeStyles();\n        // Remove borderRadius from buttonStyles if shape is specified\n        if (this.config.navigationStyle?.buttonShape && buttonStyles) {\n            delete buttonStyles['borderRadius'];\n        }\n        return {\n            ...shapeStyles,\n            ...buttonStyles\n        };\n    }\n    /**\n     * Gets the styles for the previous navigation button.\n     * @returns {Record<string, string>} The button styles\n     */\n    get prevButtonStyles() {\n        const buttonStyles = { ...(this.config.navigationStyle?.prevButton || {}) };\n        const shapeStyles = this.getButtonShapeStyles();\n        // Remove borderRadius from buttonStyles if shape is specified\n        if (this.config.navigationStyle?.buttonShape && buttonStyles) {\n            delete buttonStyles['borderRadius'];\n        }\n        return {\n            ...shapeStyles,\n            ...buttonStyles\n        };\n    }\n    /**\n     * Gets the styles for the search button.\n     * @returns {Record<string, string>} The button styles\n     */\n    get searchButtonStyles() {\n        const buttonStyles = { ...(this.config.searchStyle?.button || {}) };\n        const shapeStyles = this.getButtonShapeStyles();\n        // Remove borderRadius from buttonStyles if shape is specified\n        if (this.config.navigationStyle?.buttonShape && buttonStyles) {\n            delete buttonStyles['borderRadius'];\n        }\n        return {\n            ...shapeStyles,\n            ...buttonStyles\n        };\n    }\n    /** Get styles for carousel items */\n    getItemStyle(index) {\n        const baseStyles = {\n            width: this.config.itemWidth || '200px',\n            height: this.config.itemHeight || '100%',\n            flexShrink: '0',\n            flexGrow: '0',\n            boxSizing: 'border-box'\n        };\n        // Ensure width is relative to parent when set to 100%\n        if (this.config.itemWidth === '100%' && this.config.enableOneItemScroll) {\n            baseStyles['width'] = '100%';\n            baseStyles['maxWidth'] = '100%';\n        }\n        if (!this.config.itemGap)\n            return baseStyles;\n        const marginProperty = this.isVertical ? 'marginTop' : 'marginLeft';\n        return {\n            ...baseStyles,\n            [marginProperty]: index === 0 ? '0' : this.config.itemGap\n        };\n    }\n    get contentPadding() {\n        return this.config.contentPadding || '4px';\n    }\n    get animationDuration() {\n        return this.config.animationDuration || '300ms';\n    }\n    get animationTiming() {\n        return this.config.animationTiming || 'ease';\n    }\n    get showSearch() {\n        return this.config.enableSearch ?? false;\n    }\n    get searchPlaceholder() {\n        return this.config.searchPlaceholder || 'Search...';\n    }\n    get searchModalTitle() {\n        return this.config.searchModalTitle || 'Filter Items';\n    }\n    get searchModalStyles() {\n        return this.config.searchStyle?.modal || {};\n    }\n    toggleSearchModal() {\n        this.isSearchModalOpen = !this.isSearchModalOpen;\n        if (this.isSearchModalOpen && this.searchInput) {\n            setTimeout(() => {\n                this.searchInput.nativeElement.focus();\n            });\n        }\n    }\n    closeSearchModal() {\n        this.isSearchModalOpen = false;\n    }\n    applySearch() {\n        const query = this.searchQuery.trim().toLowerCase();\n        if (!query) {\n            this.filteredItems = this.items;\n        }\n        else {\n            this.filteredItems = this.items.filter((item) => {\n                if (typeof item === 'string') {\n                    return item.toLowerCase().includes(query);\n                }\n                return Object.values(item).some((value) => typeof value === 'string' && value.toLowerCase().includes(query));\n            });\n        }\n        this.currentTranslate = 0;\n        this.currentIndex = 0;\n        this.checkOverflow();\n        this.closeSearchModal();\n    }\n    handleClickOutside(event) {\n        const searchContainer = document.querySelector('.nsc__search');\n        if (this.isSearchModalOpen &&\n            searchContainer &&\n            !searchContainer.contains(event.target)) {\n            this.closeSearchModal();\n        }\n    }\n    getEmptyStateStyle() {\n        return this.getItemStyle(0);\n    }\n    resetSearch() {\n        this.searchQuery = '';\n        this.filteredItems = this.items;\n        this.currentTranslate = 0;\n        this.currentIndex = 0;\n        // Recalculate item widths when items change\n        setTimeout(() => {\n            this.calculateItemWidths();\n            this.checkOverflow();\n        });\n    }\n    /** Get navigation icons based on configuration and orientation */\n    getNavigationIcons() {\n        const defaultIcons = {\n            horizontal: { prev: '❮', next: '❯' },\n            vertical: { prev: '❮', next: '❯' },\n            search: '🔍'\n        };\n        const configIcons = this.config.navigationStyle?.icons || {};\n        const verticalIcons = configIcons.vertical || {};\n        if (this.isVertical) {\n            return {\n                prev: verticalIcons.prev || defaultIcons.vertical.prev,\n                next: verticalIcons.next || defaultIcons.vertical.next,\n                search: configIcons.search || defaultIcons.search\n            };\n        }\n        return {\n            prev: configIcons.prev || defaultIcons.horizontal.prev,\n            next: configIcons.next || defaultIcons.horizontal.next,\n            search: configIcons.search || defaultIcons.search\n        };\n    }\n    /** Get icon for previous button */\n    get prevIcon() {\n        return this.getNavigationIcons().prev;\n    }\n    /** Get icon for next button */\n    get nextIcon() {\n        return this.getNavigationIcons().next;\n    }\n    /** Get icon for search button */\n    get searchIcon() {\n        return this.getNavigationIcons().search;\n    }\n    /** Get icon styles based on button configuration */\n    get nextIconStyles() {\n        const buttonStyles = this.config.navigationStyle?.nextButton || {};\n        return {\n            color: buttonStyles['color'] || '#666'\n        };\n    }\n    /** Get icon styles based on button configuration */\n    get prevIconStyles() {\n        const buttonStyles = this.config.navigationStyle?.prevButton || {};\n        return {\n            color: buttonStyles['color'] || '#666'\n        };\n    }\n    /** Get icon styles based on button configuration */\n    get searchIconStyles() {\n        const buttonStyles = this.config.searchStyle?.button || {};\n        return {\n            color: buttonStyles['color'] || '#666'\n        };\n    }\n    /** Get whether navigation should be shown */\n    get showNavigation() {\n        return this.config.showNavigation ?? true;\n    }\n}\nCarouselComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: CarouselComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nCarouselComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: CarouselComponent, selector: \"nsc\", inputs: { items: \"items\", config: \"config\" }, host: { listeners: { \"document:click\": \"handleClickOutside($event)\" } }, queries: [{ propertyName: \"itemTemplate\", first: true, predicate: [\"carouselItem\"], descendants: true }], viewQueries: [{ propertyName: \"trackElement\", first: true, predicate: [\"track\"], descendants: true }, { propertyName: \"wrapperElement\", first: true, predicate: [\"wrapper\"], descendants: true }, { propertyName: \"searchInput\", first: true, predicate: [\"searchInput\"], descendants: true }], ngImport: i0, template: `\n    <div [class.nsc--vertical]=\"isVertical\" [ngStyle]=\"containerStyles\" class=\"nsc\">\n      <div\n        #wrapper\n        [style.--content-padding]=\"contentPadding\"\n        class=\"nsc__wrapper\">\n        <div\n          #track\n          [ngStyle]=\"trackStyles\"\n          [class.nsc__track--vertical]=\"isVertical\"\n          [style.--animation-duration]=\"animationDuration\"\n          [style.--animation-timing]=\"animationTiming\"\n          class=\"nsc__track\">\n          <ng-container *ngIf=\"filteredItems.length > 0; else noResults\">\n            <ng-container *ngFor=\"let item of filteredItems; let i = index\">\n              <div class=\"nsc__item\" [ngStyle]=\"getItemStyle(i)\">\n                <ng-container *ngIf=\"itemTemplate; else defaultTemplate\">\n                  <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item, index: i }\"></ng-container>\n                </ng-container>\n                <ng-template #defaultTemplate>\n                  <div class=\"nsc__item-default\">\n                    {{ item }}\n                  </div>\n                </ng-template>\n              </div>\n            </ng-container>\n          </ng-container>\n          <ng-template #noResults>\n            <div class=\"nsc__item\" [ngStyle]=\"getEmptyStateStyle()\">\n              <div class=\"nsc__empty-state\">\n                <div class=\"nsc__empty-icon\">📭</div>\n                <div class=\"nsc__empty-text\">No items found</div>\n                <button class=\"nsc__reset-button\" (click)=\"resetSearch()\">\n                  Show all items\n                </button>\n              </div>\n            </div>\n          </ng-template>\n        </div>\n      </div>\n\n      <div *ngIf=\"showNavigation\" class=\"nsc__nav-controls\">\n        <div *ngIf=\"showSearch\" class=\"nsc__search\">\n          <button [ngStyle]=\"searchButtonStyles\" (click)=\"toggleSearchModal()\" class=\"nsc__nav-button nsc__nav-button--search\">\n            <span class=\"nsc__nav-icon\" [ngStyle]=\"searchIconStyles\">{{ searchIcon }}</span>\n          </button>\n          <div *ngIf=\"isSearchModalOpen\" [class.nsc__dropdown--vertical]=\"isVertical\" (click)=\"$event.stopPropagation()\" class=\"nsc__dropdown\" >\n            <input\n              type=\"text\"\n              [placeholder]=\"searchPlaceholder\"\n              [(ngModel)]=\"searchQuery\"\n              (keyup.enter)=\"applySearch()\"\n              class=\"nsc__search-input\"\n              #searchInput\n            />\n          </div>\n        </div>\n        \n        <button \n          [class.nsc__nav-button--disabled]=\"!showPrevButton\" \n          [disabled]=\"!showPrevButton\" \n          [ngStyle]=\"prevButtonStyles\" \n          (click)=\"previous()\" \n          class=\"nsc__nav-button\">\n          <span class=\"nsc__nav-icon\" [ngStyle]=\"prevIconStyles\">{{ prevIcon }}</span>\n        </button>\n        \n        <button\n          [class.nsc__nav-button--disabled]=\"!showNextButton\"\n          [disabled]=\"!showNextButton\"\n          [ngStyle]=\"nextButtonStyles\"\n          (click)=\"next()\"\n          class=\"nsc__nav-button\">\n          <span class=\"nsc__nav-icon\" [ngStyle]=\"nextIconStyles\">{{ nextIcon }}</span>\n        </button>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".nsc{position:relative;overflow:hidden;width:100%;display:flex;flex-direction:column}.nsc--vertical{flex-direction:column}.nsc__wrapper{flex:1;overflow:hidden;position:relative;padding:var(--content-padding,10px) 0;width:100%}.nsc--vertical .nsc__wrapper{padding:0 var(--content-padding,10px)}.nsc__track{display:flex;flex-wrap:nowrap;transition:transform var(--animation-duration,.3s) var(--animation-timing,ease);width:fit-content;min-width:100%}.nsc__track--vertical{flex-direction:column;width:100%;height:fit-content}.nsc__item{flex:0 0 auto;box-sizing:border-box}.nsc--vertical .nsc__item{width:100%}.nsc__item-default{background:#fff;height:100%;display:flex;align-items:center;justify-content:center;border:1px solid #e0e0e0;border-radius:4px;padding:20px}.nsc__nav-controls{position:absolute;bottom:16px;right:16px;display:flex;gap:24px;z-index:10}.nsc__nav-button{background:#fff;border:1px solid #e0e0e0;width:32px;height:32px;padding:0;margin:0;display:flex;align-items:center;justify-content:center;cursor:pointer;transition:all .2s ease;z-index:1}.nsc__nav-icon{display:flex;align-items:center;justify-content:center;width:100%;height:100%;font-size:16px;line-height:1}.nsc__nav-button:hover:not(.nsc__nav-button--disabled){opacity:.8;transform:scale(1.05)}.nsc__nav-button--disabled{opacity:.4;cursor:not-allowed;background-color:#f5f5f5;border-color:#ddd;transition:all .2s ease}.nsc__search{position:relative}.nsc__dropdown{position:absolute;background:#fff;border:1px solid #e0e0e0;border-radius:4px;box-shadow:0 2px 8px #0000001a;z-index:1000;min-width:200px;top:100%;right:0;margin-top:8px}.nsc__dropdown--vertical{right:auto;left:100%;top:0;margin-top:0;margin-left:8px}.nsc__search-input{width:100%;padding:8px 12px;border:none;border-radius:4px;font-size:14px;outline:none}.nsc__empty-state{display:flex;flex-direction:column;align-items:center;justify-content:center;padding:30px;text-align:center;color:#666}.nsc__empty-icon{font-size:32px;margin-bottom:12px}.nsc__empty-text{font-size:16px;margin-bottom:12px}.nsc__reset-button{background:none;border:none;padding:6px 12px;font-size:13px;color:#007bff;cursor:pointer;transition:opacity .2s ease}.nsc__reset-button:hover{opacity:.7}.nsc--vertical .nsc__nav-button .nsc__nav-icon{transform:rotate(90deg)}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: CarouselComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'nsc', template: `\n    <div [class.nsc--vertical]=\"isVertical\" [ngStyle]=\"containerStyles\" class=\"nsc\">\n      <div\n        #wrapper\n        [style.--content-padding]=\"contentPadding\"\n        class=\"nsc__wrapper\">\n        <div\n          #track\n          [ngStyle]=\"trackStyles\"\n          [class.nsc__track--vertical]=\"isVertical\"\n          [style.--animation-duration]=\"animationDuration\"\n          [style.--animation-timing]=\"animationTiming\"\n          class=\"nsc__track\">\n          <ng-container *ngIf=\"filteredItems.length > 0; else noResults\">\n            <ng-container *ngFor=\"let item of filteredItems; let i = index\">\n              <div class=\"nsc__item\" [ngStyle]=\"getItemStyle(i)\">\n                <ng-container *ngIf=\"itemTemplate; else defaultTemplate\">\n                  <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item, index: i }\"></ng-container>\n                </ng-container>\n                <ng-template #defaultTemplate>\n                  <div class=\"nsc__item-default\">\n                    {{ item }}\n                  </div>\n                </ng-template>\n              </div>\n            </ng-container>\n          </ng-container>\n          <ng-template #noResults>\n            <div class=\"nsc__item\" [ngStyle]=\"getEmptyStateStyle()\">\n              <div class=\"nsc__empty-state\">\n                <div class=\"nsc__empty-icon\">📭</div>\n                <div class=\"nsc__empty-text\">No items found</div>\n                <button class=\"nsc__reset-button\" (click)=\"resetSearch()\">\n                  Show all items\n                </button>\n              </div>\n            </div>\n          </ng-template>\n        </div>\n      </div>\n\n      <div *ngIf=\"showNavigation\" class=\"nsc__nav-controls\">\n        <div *ngIf=\"showSearch\" class=\"nsc__search\">\n          <button [ngStyle]=\"searchButtonStyles\" (click)=\"toggleSearchModal()\" class=\"nsc__nav-button nsc__nav-button--search\">\n            <span class=\"nsc__nav-icon\" [ngStyle]=\"searchIconStyles\">{{ searchIcon }}</span>\n          </button>\n          <div *ngIf=\"isSearchModalOpen\" [class.nsc__dropdown--vertical]=\"isVertical\" (click)=\"$event.stopPropagation()\" class=\"nsc__dropdown\" >\n            <input\n              type=\"text\"\n              [placeholder]=\"searchPlaceholder\"\n              [(ngModel)]=\"searchQuery\"\n              (keyup.enter)=\"applySearch()\"\n              class=\"nsc__search-input\"\n              #searchInput\n            />\n          </div>\n        </div>\n        \n        <button \n          [class.nsc__nav-button--disabled]=\"!showPrevButton\" \n          [disabled]=\"!showPrevButton\" \n          [ngStyle]=\"prevButtonStyles\" \n          (click)=\"previous()\" \n          class=\"nsc__nav-button\">\n          <span class=\"nsc__nav-icon\" [ngStyle]=\"prevIconStyles\">{{ prevIcon }}</span>\n        </button>\n        \n        <button\n          [class.nsc__nav-button--disabled]=\"!showNextButton\"\n          [disabled]=\"!showNextButton\"\n          [ngStyle]=\"nextButtonStyles\"\n          (click)=\"next()\"\n          class=\"nsc__nav-button\">\n          <span class=\"nsc__nav-icon\" [ngStyle]=\"nextIconStyles\">{{ nextIcon }}</span>\n        </button>\n      </div>\n    </div>\n  `, styles: [\".nsc{position:relative;overflow:hidden;width:100%;display:flex;flex-direction:column}.nsc--vertical{flex-direction:column}.nsc__wrapper{flex:1;overflow:hidden;position:relative;padding:var(--content-padding,10px) 0;width:100%}.nsc--vertical .nsc__wrapper{padding:0 var(--content-padding,10px)}.nsc__track{display:flex;flex-wrap:nowrap;transition:transform var(--animation-duration,.3s) var(--animation-timing,ease);width:fit-content;min-width:100%}.nsc__track--vertical{flex-direction:column;width:100%;height:fit-content}.nsc__item{flex:0 0 auto;box-sizing:border-box}.nsc--vertical .nsc__item{width:100%}.nsc__item-default{background:#fff;height:100%;display:flex;align-items:center;justify-content:center;border:1px solid #e0e0e0;border-radius:4px;padding:20px}.nsc__nav-controls{position:absolute;bottom:16px;right:16px;display:flex;gap:24px;z-index:10}.nsc__nav-button{background:#fff;border:1px solid #e0e0e0;width:32px;height:32px;padding:0;margin:0;display:flex;align-items:center;justify-content:center;cursor:pointer;transition:all .2s ease;z-index:1}.nsc__nav-icon{display:flex;align-items:center;justify-content:center;width:100%;height:100%;font-size:16px;line-height:1}.nsc__nav-button:hover:not(.nsc__nav-button--disabled){opacity:.8;transform:scale(1.05)}.nsc__nav-button--disabled{opacity:.4;cursor:not-allowed;background-color:#f5f5f5;border-color:#ddd;transition:all .2s ease}.nsc__search{position:relative}.nsc__dropdown{position:absolute;background:#fff;border:1px solid #e0e0e0;border-radius:4px;box-shadow:0 2px 8px #0000001a;z-index:1000;min-width:200px;top:100%;right:0;margin-top:8px}.nsc__dropdown--vertical{right:auto;left:100%;top:0;margin-top:0;margin-left:8px}.nsc__search-input{width:100%;padding:8px 12px;border:none;border-radius:4px;font-size:14px;outline:none}.nsc__empty-state{display:flex;flex-direction:column;align-items:center;justify-content:center;padding:30px;text-align:center;color:#666}.nsc__empty-icon{font-size:32px;margin-bottom:12px}.nsc__empty-text{font-size:16px;margin-bottom:12px}.nsc__reset-button{background:none;border:none;padding:6px 12px;font-size:13px;color:#007bff;cursor:pointer;transition:opacity .2s ease}.nsc__reset-button:hover{opacity:.7}.nsc--vertical .nsc__nav-button .nsc__nav-icon{transform:rotate(90deg)}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { items: [{\n                type: Input\n            }], config: [{\n                type: Input\n            }], itemTemplate: [{\n                type: ContentChild,\n                args: ['carouselItem']\n            }], trackElement: [{\n                type: ViewChild,\n                args: ['track']\n            }], wrapperElement: [{\n                type: ViewChild,\n                args: ['wrapper']\n            }], searchInput: [{\n                type: ViewChild,\n                args: ['searchInput']\n            }], handleClickOutside: [{\n                type: HostListener,\n                args: ['document:click', ['$event']]\n            }] } });\n\nclass NgSmoothCarouselModule {\n}\nNgSmoothCarouselModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: NgSmoothCarouselModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgSmoothCarouselModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: NgSmoothCarouselModule, declarations: [CarouselComponent], imports: [CommonModule, FormsModule], exports: [CarouselComponent] });\nNgSmoothCarouselModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: NgSmoothCarouselModule, imports: [CommonModule, FormsModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: NgSmoothCarouselModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [CarouselComponent],\n                    imports: [CommonModule, FormsModule],\n                    exports: [CarouselComponent],\n                }]\n        }] });\n\n/*\n * Public API Surface of ng-smooth-carousel\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CarouselComponent, NgSmoothCarouselModule };\n//# sourceMappingURL=ng-smooth-carousel.mjs.map\n","map":{"version":3,"file":"ng-smooth-carousel.mjs","sources":["../../../projects/ng-smooth-carousel/src/lib/carousel.component.ts","../../../projects/ng-smooth-carousel/src/lib/carousel.module.ts","../../../projects/ng-smooth-carousel/src/public-api.ts","../../../projects/ng-smooth-carousel/src/ng-smooth-carousel.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  ContentChild,\n  TemplateRef,\n  ElementRef,\n  AfterViewInit,\n  OnDestroy,\n  ViewChild,\n  ChangeDetectorRef,\n  HostListener,\n  OnInit,\n} from '@angular/core';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil, debounceTime } from 'rxjs/operators';\nimport { CarouselConfig } from './carousel-config.interface';\n\n/**\n * A smooth, customizable carousel component for Angular applications.\n * \n * @description\n * This component provides a flexible carousel/slider with the following features:\n * - Horizontal and vertical orientations\n * - Customizable navigation buttons with different shapes and styles\n * - Search functionality with filtering\n * - Responsive design with configurable item sizes\n * - Custom item templates\n * - Autoplay with configurable delay\n * - Loop functionality\n * \n * @example\n * ```html\n * <nsc\n *   [items]=\"items\"\n *   [config]=\"{\n *     orientation: 'horizontal',\n *     navigationStyle: {\n *       buttonShape: 'rounded',\n *       nextButton: { color: '#333' },\n *       prevButton: { color: '#333' }\n *     }\n *   }\">\n *   <ng-template #carouselItem let-item>\n *     {{ item }}\n *   </ng-template>\n * </nsc>\n * ```\n */\n@Component({\n  selector: 'nsc',\n  template: `\n    <div [class.nsc--vertical]=\"isVertical\" [ngStyle]=\"containerStyles\" class=\"nsc\">\n      <div\n        #wrapper\n        [style.--content-padding]=\"contentPadding\"\n        class=\"nsc__wrapper\">\n        <div\n          #track\n          [ngStyle]=\"trackStyles\"\n          [class.nsc__track--vertical]=\"isVertical\"\n          [style.--animation-duration]=\"animationDuration\"\n          [style.--animation-timing]=\"animationTiming\"\n          class=\"nsc__track\">\n          <ng-container *ngIf=\"filteredItems.length > 0; else noResults\">\n            <ng-container *ngFor=\"let item of filteredItems; let i = index\">\n              <div class=\"nsc__item\" [ngStyle]=\"getItemStyle(i)\">\n                <ng-container *ngIf=\"itemTemplate; else defaultTemplate\">\n                  <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item, index: i }\"></ng-container>\n                </ng-container>\n                <ng-template #defaultTemplate>\n                  <div class=\"nsc__item-default\">\n                    {{ item }}\n                  </div>\n                </ng-template>\n              </div>\n            </ng-container>\n          </ng-container>\n          <ng-template #noResults>\n            <div class=\"nsc__item\" [ngStyle]=\"getEmptyStateStyle()\">\n              <div class=\"nsc__empty-state\">\n                <div class=\"nsc__empty-icon\">📭</div>\n                <div class=\"nsc__empty-text\">No items found</div>\n                <button class=\"nsc__reset-button\" (click)=\"resetSearch()\">\n                  Show all items\n                </button>\n              </div>\n            </div>\n          </ng-template>\n        </div>\n      </div>\n\n      <div *ngIf=\"showNavigation\" class=\"nsc__nav-controls\">\n        <div *ngIf=\"showSearch\" class=\"nsc__search\">\n          <button [ngStyle]=\"searchButtonStyles\" (click)=\"toggleSearchModal()\" class=\"nsc__nav-button nsc__nav-button--search\">\n            <span class=\"nsc__nav-icon\" [ngStyle]=\"searchIconStyles\">{{ searchIcon }}</span>\n          </button>\n          <div *ngIf=\"isSearchModalOpen\" [class.nsc__dropdown--vertical]=\"isVertical\" (click)=\"$event.stopPropagation()\" class=\"nsc__dropdown\" >\n            <input\n              type=\"text\"\n              [placeholder]=\"searchPlaceholder\"\n              [(ngModel)]=\"searchQuery\"\n              (keyup.enter)=\"applySearch()\"\n              class=\"nsc__search-input\"\n              #searchInput\n            />\n          </div>\n        </div>\n        \n        <button \n          [class.nsc__nav-button--disabled]=\"!showPrevButton\" \n          [disabled]=\"!showPrevButton\" \n          [ngStyle]=\"prevButtonStyles\" \n          (click)=\"previous()\" \n          class=\"nsc__nav-button\">\n          <span class=\"nsc__nav-icon\" [ngStyle]=\"prevIconStyles\">{{ prevIcon }}</span>\n        </button>\n        \n        <button\n          [class.nsc__nav-button--disabled]=\"!showNextButton\"\n          [disabled]=\"!showNextButton\"\n          [ngStyle]=\"nextButtonStyles\"\n          (click)=\"next()\"\n          class=\"nsc__nav-button\">\n          <span class=\"nsc__nav-icon\" [ngStyle]=\"nextIconStyles\">{{ nextIcon }}</span>\n        </button>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .nsc{position:relative;overflow:hidden;width:100%;display:flex;flex-direction:column}\n      .nsc--vertical{flex-direction:column}\n      .nsc__wrapper{flex:1;overflow:hidden;position:relative;padding:var(--content-padding,10px) 0;width:100%}\n      .nsc--vertical .nsc__wrapper{padding:0 var(--content-padding,10px)}\n      .nsc__track{display:flex;flex-wrap:nowrap;transition:transform var(--animation-duration,.3s) var(--animation-timing,ease);width:fit-content;min-width:100%}\n      .nsc__track--vertical{flex-direction:column;width:100%;height:fit-content}\n      .nsc__item{flex:0 0 auto;box-sizing:border-box}\n      .nsc--vertical .nsc__item{width:100%}\n      .nsc__item-default{background:#fff;height:100%;display:flex;align-items:center;justify-content:center;border:1px solid #e0e0e0;border-radius:4px;padding:20px}\n      .nsc__nav-controls{position:absolute;bottom:16px;right:16px;display:flex;gap:24px;z-index:10}\n      .nsc__nav-button{background:#fff;border:1px solid #e0e0e0;width:32px;height:32px;padding:0;margin:0;display:flex;align-items:center;justify-content:center;cursor:pointer;transition:all .2s ease;z-index:1}\n      .nsc__nav-icon{display:flex;align-items:center;justify-content:center;width:100%;height:100%;font-size:16px;line-height:1}\n      .nsc__nav-button:hover:not(.nsc__nav-button--disabled){opacity:.8;transform:scale(1.05)}\n      .nsc__nav-button--disabled{opacity:.4;cursor:not-allowed;background-color:#f5f5f5;border-color:#ddd;transition:all .2s ease}\n      .nsc__search{position:relative}\n      .nsc__dropdown{position:absolute;background:#fff;border:1px solid #e0e0e0;border-radius:4px;box-shadow:0 2px 8px rgba(0,0,0,.1);z-index:1000;min-width:200px;top:100%;right:0;margin-top:8px}\n      .nsc__dropdown--vertical{right:auto;left:100%;top:0;margin-top:0;margin-left:8px}\n      .nsc__search-input{width:100%;padding:8px 12px;border:none;border-radius:4px;font-size:14px;outline:none}\n      .nsc__empty-state{display:flex;flex-direction:column;align-items:center;justify-content:center;padding:30px;text-align:center;color:#666}\n      .nsc__empty-icon{font-size:32px;margin-bottom:12px}\n      .nsc__empty-text{font-size:16px;margin-bottom:12px}\n      .nsc__reset-button{background:none;border:none;padding:6px 12px;font-size:13px;color:#007bff;cursor:pointer;transition:opacity .2s ease}\n      .nsc__reset-button:hover{opacity:.7}\n      .nsc--vertical .nsc__nav-button .nsc__nav-icon{transform:rotate(90deg)}\n    `,\n  ],\n})\nexport class CarouselComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input() items: any[] = [];\n  @Input() config: CarouselConfig = {};\n\n  @ContentChild('carouselItem') itemTemplate!: TemplateRef<any>;\n  @ViewChild('track') trackElement!: ElementRef<HTMLElement>;\n  @ViewChild('wrapper') wrapperElement!: ElementRef<HTMLElement>;\n  @ViewChild('searchInput') searchInput!: ElementRef<HTMLInputElement>;\n\n  private currentTranslate = 0;\n  private currentIndex = 0;\n  private destroy$ = new Subject<void>();\n  private autoplayInterval?: ReturnType<typeof setInterval>;\n  private itemWidths: number[] = [];\n\n  private readonly scrollSizeMap: Record<string, number> = {\n    'xs': 50,\n    'sm': 100,\n    'md': 150,\n    'lg': 200,\n    'xl': 250,\n    '2xl': 300,\n    '3xl': 350,\n    '4xl': 400,\n    '5xl': 450,\n    '6xl': 500,\n    '7xl': 550,\n    '8xl': 600,\n    '9xl': 650,\n    '10xl': 700,\n    'full': 1,\n  };\n\n  showPrevButton = false;\n  showNextButton = false;\n  searchQuery = '';\n  isSearchModalOpen = false;\n  filteredItems: any[] = [];\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.filteredItems = this.items;\n  }\n\n  private parseTimeToMs(time: string): number {\n    if (time.endsWith('ms')) {\n      return parseInt(time.slice(0, -2), 10);\n    }\n    if (time.endsWith('s')) {\n      return parseFloat(time.slice(0, -1)) * 1000;\n    }\n    return parseInt(time, 10);\n  }\n\n  private setupAutoplay(): void {\n    if (this.autoplayInterval) {\n      clearInterval(this.autoplayInterval);\n    }\n\n    if (!this.config.autoplay) return;\n\n    const delay = this.parseTimeToMs(this.config.autoplayDelay || '3000ms');\n\n    this.autoplayInterval = setInterval(() => {\n      const track = this.trackElement?.nativeElement;\n      const wrapper = this.wrapperElement?.nativeElement;\n      \n      if (!track || !wrapper) return;\n      \n      const maxTranslate = this.isVertical\n        ? track.offsetHeight - wrapper.offsetHeight\n        : track.offsetWidth - wrapper.offsetWidth;\n\n      if (this.currentTranslate >= maxTranslate) {\n        if (this.config.loop) {\n          this.currentTranslate = 0;\n        } else {\n          clearInterval(this.autoplayInterval);\n          return;\n        }\n      } else {\n        this.next();\n      }\n      this.cdr.detectChanges();\n    }, delay);\n  }\n\n  ngAfterViewInit(): void {\n    this.initializeCarousel();\n    this.setupResizeListener();\n    this.setupAutoplay();\n    \n    setTimeout(() => {\n      this.calculateItemWidths();\n      this.checkOverflow();\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.autoplayInterval) {\n      clearInterval(this.autoplayInterval);\n    }\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get isVertical(): boolean {\n    return this.config.orientation === 'vertical';\n  }\n\n  get containerStyles(): Record<string, string> {\n    return {\n      width: this.config.containerWidth || '100%',\n      height: this.config.containerHeight || 'auto',\n    };\n  }\n\n  get trackStyles(): Record<string, string> {\n    const baseStyles = {\n      transform: this.isVertical\n        ? `translateY(-${this.currentTranslate}px)`\n        : `translateX(-${this.currentTranslate}px)`,\n    };\n\n    return this.isVertical\n      ? { ...baseStyles, flexDirection: 'column' }\n      : baseStyles;\n  }\n\n  private initializeCarousel(): void {\n    if (!this.trackElement || !this.wrapperElement) return;\n    \n    this.currentTranslate = 0;\n    this.checkOverflow();\n  }\n\n  private setupResizeListener(): void {\n    fromEvent(window, 'resize')\n      .pipe(debounceTime(200), takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.checkOverflow();\n      });\n  }\n\n  private checkOverflow(): void {\n    if (!this.showNavigation) {\n      this.showPrevButton = false;\n      this.showNextButton = false;\n      return;\n    }\n\n    const track = this.trackElement?.nativeElement;\n    const wrapper = this.wrapperElement?.nativeElement;\n\n    if (!track || !wrapper) return;\n\n    if (this.config.enableOneItemScroll) {\n      this.showPrevButton = this.currentIndex > 0;\n      this.showNextButton = this.currentIndex < this.filteredItems.length - 1;\n    } else if (this.isVertical) {\n      this.showPrevButton = this.currentTranslate > 0;\n      this.showNextButton = \n        track.offsetHeight - this.currentTranslate > wrapper.offsetHeight;\n    } else {\n      this.showPrevButton = this.currentTranslate > 0;\n      this.showNextButton = \n        track.offsetWidth - this.currentTranslate > wrapper.offsetWidth;\n    }\n\n    this.cdr.detectChanges();\n  }\n\n  private calculateItemWidths(): void {\n    if (!this.trackElement || !this.wrapperElement) return;\n    \n    const track = this.trackElement.nativeElement;\n    const wrapper = this.wrapperElement.nativeElement;\n    const items = Array.from(track.children) as HTMLElement[];\n    \n    // When items should take up 100% of parent width\n    if (this.config.itemWidth === '100%' && this.config.enableOneItemScroll) {\n      // Just use the parent width for all items\n      const parentWidth = wrapper.offsetWidth;\n      this.itemWidths = items.map(() => parentWidth);\n      return;\n    }\n    \n    this.itemWidths = items.map(item => {\n      // Get the full width including margins\n      const style = window.getComputedStyle(item);\n      const width = item.offsetWidth;\n      const marginLeft = parseInt(style.marginLeft || '0', 10);\n      const marginRight = parseInt(style.marginRight || '0', 10);\n      \n      return width + marginLeft + marginRight;\n    });\n  }\n\n  private getScrollAmount(): number {\n    if (this.config.enableOneItemScroll && this.itemWidths.length > 0) {\n      if (this.currentIndex < this.itemWidths.length) {\n        return this.itemWidths[this.currentIndex];\n      }\n      // Fallback to the first item's width if currentIndex is out of bounds\n      return this.itemWidths[0] || this.wrapperElement.nativeElement.offsetWidth;\n    }\n    \n    const size = this.config.scrollSize || 'sm';\n    \n    // If scrollSize is numeric, use it as the number of items to scroll\n    if (size === 'full') {\n      // Use the wrapper's width (parent container) instead of the screen width\n      return this.wrapperElement.nativeElement.offsetWidth;\n    }\n    \n    return this.scrollSizeMap[size] || this.scrollSizeMap['sm'];\n  }\n\n  previous(): void {\n    if (this.config.enableOneItemScroll) {\n      if (this.currentIndex > 0) {\n        this.currentIndex--;\n        // Calculate the exact position based on previous item widths\n        if (this.currentIndex === 0) {\n          // If we're at the first item, ensure we're at the beginning\n          this.currentTranslate = 0;\n        } else {\n          // Calculate position based on widths of all previous items plus gaps\n          const itemWidth = this.itemWidths[this.currentIndex] || this.wrapperElement.nativeElement.offsetWidth;\n          \n          // If we have gaps, consider them too\n          const gapWidth = this.config.itemGap ? \n            parseInt(this.config.itemGap.replace('px', ''), 10) : 0;\n          \n          this.currentTranslate = this.currentIndex * (itemWidth + gapWidth);\n        }\n      }\n    } else {\n      const scrollAmount = this.getScrollAmount();\n      this.currentTranslate = Math.max(0, this.currentTranslate - scrollAmount);\n    }\n    this.checkOverflow();\n  }\n\n  next(): void {\n    const track = this.trackElement.nativeElement;\n    const wrapper = this.wrapperElement.nativeElement;\n    \n    if (this.config.enableOneItemScroll) {\n      if (this.currentIndex < this.filteredItems.length - 1) {\n        // Get the width of the current item\n        const itemWidth = this.itemWidths[this.currentIndex] || wrapper.offsetWidth;\n        \n        // If we have gaps, consider them too\n        const gapWidth = this.config.itemGap ? \n          parseInt(this.config.itemGap.replace('px', ''), 10) : 0;\n        \n        this.currentIndex++;\n        \n        // Calculate position based on all previous items plus gaps\n        if (this.config.itemWidth === '100%') {\n          // For 100% width items, simply multiply by the index\n          this.currentTranslate = this.currentIndex * (itemWidth + gapWidth);\n        } else {\n          // For variable width items, add the current item width\n          this.currentTranslate += itemWidth + gapWidth;\n        }\n      }\n    } else {\n      const scrollAmount = this.getScrollAmount();\n      const maxTranslate = this.isVertical\n        ? track.offsetHeight - wrapper.offsetHeight\n        : track.offsetWidth - wrapper.offsetWidth;\n\n      this.currentTranslate = Math.min(\n        maxTranslate,\n        this.currentTranslate + scrollAmount\n      );\n    }\n    this.checkOverflow();\n  }\n\n  /**\n   * Gets the button shape styles based on configuration.\n   * @private\n   * @returns {Record<string, string>} The button shape styles\n   */\n  private getButtonShapeStyles(): Record<string, string> {\n    const shape = this.config.navigationStyle?.buttonShape;\n    \n    // If borderRadius is explicitly set in button styles, warn about conflict\n    if (this.config.navigationStyle?.nextButton?.['borderRadius'] || \n        this.config.navigationStyle?.prevButton?.['borderRadius'] ||\n        this.config.searchStyle?.button?.['borderRadius']) {\n      console.warn('Both buttonShape and borderRadius are set. buttonShape will take precedence.');\n    }\n\n    switch (shape) {\n      case 'circle':\n        return { borderRadius: '50%' };\n      case 'rounded':\n        return { borderRadius: '4px' };\n      case 'square':\n      default:\n        return { borderRadius: '0' };\n    }\n  }\n\n  /**\n   * Gets the styles for the next navigation button.\n   * @returns {Record<string, string>} The button styles\n   */\n  get nextButtonStyles(): Record<string, string> {\n    const buttonStyles = { ...(this.config.navigationStyle?.nextButton || {}) };\n    const shapeStyles = this.getButtonShapeStyles();\n    \n    // Remove borderRadius from buttonStyles if shape is specified\n    if (this.config.navigationStyle?.buttonShape && buttonStyles) {\n      delete buttonStyles['borderRadius'];\n    }\n\n    return {\n      ...shapeStyles,\n      ...buttonStyles\n    };\n  }\n\n  /**\n   * Gets the styles for the previous navigation button.\n   * @returns {Record<string, string>} The button styles\n   */\n  get prevButtonStyles(): Record<string, string> {\n    const buttonStyles = { ...(this.config.navigationStyle?.prevButton || {}) };\n    const shapeStyles = this.getButtonShapeStyles();\n    \n    // Remove borderRadius from buttonStyles if shape is specified\n    if (this.config.navigationStyle?.buttonShape && buttonStyles) {\n      delete buttonStyles['borderRadius'];\n    }\n\n    return {\n      ...shapeStyles,\n      ...buttonStyles\n    };\n  }\n\n  /**\n   * Gets the styles for the search button.\n   * @returns {Record<string, string>} The button styles\n   */\n  get searchButtonStyles(): Record<string, string> {\n    const buttonStyles = { ...(this.config.searchStyle?.button || {}) };\n    const shapeStyles = this.getButtonShapeStyles();\n    \n    // Remove borderRadius from buttonStyles if shape is specified\n    if (this.config.navigationStyle?.buttonShape && buttonStyles) {\n      delete buttonStyles['borderRadius'];\n    }\n\n    return {\n      ...shapeStyles,\n      ...buttonStyles\n    };\n  }\n\n  /** Get styles for carousel items */\n  getItemStyle(index: number): Record<string, string> {\n    const baseStyles: Record<string, string> = {\n      width: this.config.itemWidth || '200px',\n      height: this.config.itemHeight || '100%',\n      flexShrink: '0',\n      flexGrow: '0',\n      boxSizing: 'border-box'\n    };\n\n    // Ensure width is relative to parent when set to 100%\n    if (this.config.itemWidth === '100%' && this.config.enableOneItemScroll) {\n      baseStyles['width'] = '100%';\n      baseStyles['maxWidth'] = '100%';\n    }\n\n    if (!this.config.itemGap) return baseStyles;\n\n    const marginProperty = this.isVertical ? 'marginTop' : 'marginLeft';\n    return {\n      ...baseStyles,\n      [marginProperty]: index === 0 ? '0' : this.config.itemGap\n    };\n  }\n\n  get contentPadding(): string {\n    return this.config.contentPadding || '4px';\n  }\n\n  get animationDuration(): string {\n    return this.config.animationDuration || '300ms';\n  }\n\n  get animationTiming(): string {\n    return this.config.animationTiming || 'ease';\n  }\n\n  get showSearch(): boolean {\n    return this.config.enableSearch ?? false;\n  }\n\n  get searchPlaceholder(): string {\n    return this.config.searchPlaceholder || 'Search...';\n  }\n\n  get searchModalTitle(): string {\n    return this.config.searchModalTitle || 'Filter Items';\n  }\n\n  get searchModalStyles(): Record<string, string> {\n    return this.config.searchStyle?.modal || {};\n  }\n\n  toggleSearchModal(): void {\n    this.isSearchModalOpen = !this.isSearchModalOpen;\n    if (this.isSearchModalOpen && this.searchInput) {\n      setTimeout(() => {\n        this.searchInput.nativeElement.focus();\n      });\n    }\n  }\n\n  closeSearchModal(): void {\n    this.isSearchModalOpen = false;\n  }\n\n  applySearch(): void {\n    const query = this.searchQuery.trim().toLowerCase();\n\n    if (!query) {\n      this.filteredItems = this.items;\n    } else {\n      this.filteredItems = this.items.filter((item) => {\n        if (typeof item === 'string') {\n          return item.toLowerCase().includes(query);\n        }\n        return Object.values(item).some(\n          (value) =>\n            typeof value === 'string' && value.toLowerCase().includes(query)\n        );\n      });\n    }\n\n    this.currentTranslate = 0;\n    this.currentIndex = 0;\n    this.checkOverflow();\n    this.closeSearchModal();\n  }\n\n  @HostListener('document:click', ['$event'])\n  handleClickOutside(event: MouseEvent): void {\n    const searchContainer = document.querySelector('.nsc__search');\n    if (\n      this.isSearchModalOpen &&\n      searchContainer &&\n      !searchContainer.contains(event.target as Node)\n    ) {\n      this.closeSearchModal();\n    }\n  }\n\n  getEmptyStateStyle(): Record<string, string> {\n    return this.getItemStyle(0);\n  }\n\n  resetSearch(): void {\n    this.searchQuery = '';\n    this.filteredItems = this.items;\n    this.currentTranslate = 0;\n    this.currentIndex = 0;\n    \n    // Recalculate item widths when items change\n    setTimeout(() => {\n      this.calculateItemWidths();\n      this.checkOverflow();\n    });\n  }\n\n  /** Get navigation icons based on configuration and orientation */\n  private getNavigationIcons(): { prev: string; next: string; search: string } {\n    const defaultIcons = {\n      horizontal: { prev: '❮', next: '❯' },\n      vertical: { prev: '❮', next: '❯' },\n      search: '🔍'\n    };\n\n    const configIcons = this.config.navigationStyle?.icons || {};\n    const verticalIcons = configIcons.vertical || {};\n\n    if (this.isVertical) {\n      return {\n        prev: verticalIcons.prev || defaultIcons.vertical.prev,\n        next: verticalIcons.next || defaultIcons.vertical.next,\n        search: configIcons.search || defaultIcons.search\n      };\n    }\n\n    return {\n      prev: configIcons.prev || defaultIcons.horizontal.prev,\n      next: configIcons.next || defaultIcons.horizontal.next,\n      search: configIcons.search || defaultIcons.search\n    };\n  }\n\n  /** Get icon for previous button */\n  get prevIcon(): string {\n    return this.getNavigationIcons().prev;\n  }\n\n  /** Get icon for next button */\n  get nextIcon(): string {\n    return this.getNavigationIcons().next;\n  }\n\n  /** Get icon for search button */\n  get searchIcon(): string {\n    return this.getNavigationIcons().search;\n  }\n\n  /** Get icon styles based on button configuration */\n  get nextIconStyles(): Record<string, string> {\n    const buttonStyles = this.config.navigationStyle?.nextButton || {};\n    return {\n      color: buttonStyles['color'] || '#666'\n    };\n  }\n\n  /** Get icon styles based on button configuration */\n  get prevIconStyles(): Record<string, string> {\n    const buttonStyles = this.config.navigationStyle?.prevButton || {};\n    return {\n      color: buttonStyles['color'] || '#666'\n    };\n  }\n\n  /** Get icon styles based on button configuration */\n  get searchIconStyles(): Record<string, string> {\n    const buttonStyles = this.config.searchStyle?.button || {};\n    return {\n      color: buttonStyles['color'] || '#666'\n    };\n  }\n\n  /** Get whether navigation should be shown */\n  get showNavigation(): boolean {\n    return this.config.showNavigation ?? true;\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CarouselComponent } from './carousel.component';\n\n@NgModule({\n  declarations: [CarouselComponent],\n  imports: [CommonModule, FormsModule],\n  exports: [CarouselComponent],\n})\nexport class NgSmoothCarouselModule {}\n","/*\n * Public API Surface of ng-smooth-carousel\n */\n\n// Component and Module exports\nexport * from './lib/carousel.component';\nexport * from './lib/carousel.module';\n\n// Interface exports\nexport * from './lib/carousel-config.interface';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Component, Input, ContentChild, ViewChild, HostListener, NgModule } from '@angular/core';\nimport { Subject, fromEvent } from 'rxjs';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\n\n/**\n * A smooth, customizable carousel component for Angular applications.\n *\n * @description\n * This component provides a flexible carousel/slider with the following features:\n * - Horizontal and vertical orientations\n * - Customizable navigation buttons with different shapes and styles\n * - Search functionality with filtering\n * - Responsive design with configurable item sizes\n * - Custom item templates\n * - Autoplay with configurable delay\n * - Loop functionality\n *\n * @example\n * ```html\n * <nsc\n *   [items]=\"items\"\n *   [config]=\"{\n *     orientation: 'horizontal',\n *     navigationStyle: {\n *       buttonShape: 'rounded',\n *       nextButton: { color: '#333' },\n *       prevButton: { color: '#333' }\n *     }\n *   }\">\n *   <ng-template #carouselItem let-item>\n *     {{ item }}\n *   </ng-template>\n * </nsc>\n * ```\n */\nclass CarouselComponent {\n    constructor(cdr) {\n        this.cdr = cdr;\n        this.items = [];\n        this.config = {};\n        this.currentTranslate = 0;\n        this.currentIndex = 0;\n        this.destroy$ = new Subject();\n        this.itemWidths = [];\n        this.scrollSizeMap = {\n            'xs': 50,\n            'sm': 100,\n            'md': 150,\n            'lg': 200,\n            'xl': 250,\n            '2xl': 300,\n            '3xl': 350,\n            '4xl': 400,\n            '5xl': 450,\n            '6xl': 500,\n            '7xl': 550,\n            '8xl': 600,\n            '9xl': 650,\n            '10xl': 700,\n            'full': 1,\n        };\n        this.showPrevButton = false;\n        this.showNextButton = false;\n        this.searchQuery = '';\n        this.isSearchModalOpen = false;\n        this.filteredItems = [];\n    }\n    ngOnInit() {\n        this.filteredItems = this.items;\n    }\n    parseTimeToMs(time) {\n        if (time.endsWith('ms')) {\n            return parseInt(time.slice(0, -2), 10);\n        }\n        if (time.endsWith('s')) {\n            return parseFloat(time.slice(0, -1)) * 1000;\n        }\n        return parseInt(time, 10);\n    }\n    setupAutoplay() {\n        if (this.autoplayInterval) {\n            clearInterval(this.autoplayInterval);\n        }\n        if (!this.config.autoplay)\n            return;\n        const delay = this.parseTimeToMs(this.config.autoplayDelay || '3000ms');\n        this.autoplayInterval = setInterval(() => {\n            var _a, _b;\n            const track = (_a = this.trackElement) === null || _a === void 0 ? void 0 : _a.nativeElement;\n            const wrapper = (_b = this.wrapperElement) === null || _b === void 0 ? void 0 : _b.nativeElement;\n            if (!track || !wrapper)\n                return;\n            const maxTranslate = this.isVertical\n                ? track.offsetHeight - wrapper.offsetHeight\n                : track.offsetWidth - wrapper.offsetWidth;\n            if (this.currentTranslate >= maxTranslate) {\n                if (this.config.loop) {\n                    this.currentTranslate = 0;\n                }\n                else {\n                    clearInterval(this.autoplayInterval);\n                    return;\n                }\n            }\n            else {\n                this.next();\n            }\n            this.cdr.detectChanges();\n        }, delay);\n    }\n    ngAfterViewInit() {\n        this.initializeCarousel();\n        this.setupResizeListener();\n        this.setupAutoplay();\n        setTimeout(() => {\n            this.calculateItemWidths();\n            this.checkOverflow();\n        });\n    }\n    ngOnDestroy() {\n        if (this.autoplayInterval) {\n            clearInterval(this.autoplayInterval);\n        }\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    get isVertical() {\n        return this.config.orientation === 'vertical';\n    }\n    get containerStyles() {\n        return {\n            width: this.config.containerWidth || '100%',\n            height: this.config.containerHeight || 'auto',\n        };\n    }\n    get trackStyles() {\n        const baseStyles = {\n            transform: this.isVertical\n                ? `translateY(-${this.currentTranslate}px)`\n                : `translateX(-${this.currentTranslate}px)`,\n        };\n        return this.isVertical\n            ? Object.assign(Object.assign({}, baseStyles), { flexDirection: 'column' }) : baseStyles;\n    }\n    initializeCarousel() {\n        if (!this.trackElement || !this.wrapperElement)\n            return;\n        this.currentTranslate = 0;\n        this.checkOverflow();\n    }\n    setupResizeListener() {\n        fromEvent(window, 'resize')\n            .pipe(debounceTime(200), takeUntil(this.destroy$))\n            .subscribe(() => {\n            this.checkOverflow();\n        });\n    }\n    checkOverflow() {\n        var _a, _b;\n        if (!this.showNavigation) {\n            this.showPrevButton = false;\n            this.showNextButton = false;\n            return;\n        }\n        const track = (_a = this.trackElement) === null || _a === void 0 ? void 0 : _a.nativeElement;\n        const wrapper = (_b = this.wrapperElement) === null || _b === void 0 ? void 0 : _b.nativeElement;\n        if (!track || !wrapper)\n            return;\n        if (this.config.enableOneItemScroll) {\n            this.showPrevButton = this.currentIndex > 0;\n            this.showNextButton = this.currentIndex < this.filteredItems.length - 1;\n        }\n        else if (this.isVertical) {\n            this.showPrevButton = this.currentTranslate > 0;\n            this.showNextButton =\n                track.offsetHeight - this.currentTranslate > wrapper.offsetHeight;\n        }\n        else {\n            this.showPrevButton = this.currentTranslate > 0;\n            this.showNextButton =\n                track.offsetWidth - this.currentTranslate > wrapper.offsetWidth;\n        }\n        this.cdr.detectChanges();\n    }\n    calculateItemWidths() {\n        if (!this.trackElement || !this.wrapperElement)\n            return;\n        const track = this.trackElement.nativeElement;\n        const wrapper = this.wrapperElement.nativeElement;\n        const items = Array.from(track.children);\n        // When items should take up 100% of parent width\n        if (this.config.itemWidth === '100%' && this.config.enableOneItemScroll) {\n            // Just use the parent width for all items\n            const parentWidth = wrapper.offsetWidth;\n            this.itemWidths = items.map(() => parentWidth);\n            return;\n        }\n        this.itemWidths = items.map(item => {\n            // Get the full width including margins\n            const style = window.getComputedStyle(item);\n            const width = item.offsetWidth;\n            const marginLeft = parseInt(style.marginLeft || '0', 10);\n            const marginRight = parseInt(style.marginRight || '0', 10);\n            return width + marginLeft + marginRight;\n        });\n    }\n    getScrollAmount() {\n        if (this.config.enableOneItemScroll && this.itemWidths.length > 0) {\n            if (this.currentIndex < this.itemWidths.length) {\n                return this.itemWidths[this.currentIndex];\n            }\n            // Fallback to the first item's width if currentIndex is out of bounds\n            return this.itemWidths[0] || this.wrapperElement.nativeElement.offsetWidth;\n        }\n        const size = this.config.scrollSize || 'sm';\n        // If scrollSize is numeric, use it as the number of items to scroll\n        if (size === 'full') {\n            // Use the wrapper's width (parent container) instead of the screen width\n            return this.wrapperElement.nativeElement.offsetWidth;\n        }\n        return this.scrollSizeMap[size] || this.scrollSizeMap['sm'];\n    }\n    previous() {\n        if (this.config.enableOneItemScroll) {\n            if (this.currentIndex > 0) {\n                this.currentIndex--;\n                // Calculate the exact position based on previous item widths\n                if (this.currentIndex === 0) {\n                    // If we're at the first item, ensure we're at the beginning\n                    this.currentTranslate = 0;\n                }\n                else {\n                    // Calculate position based on widths of all previous items plus gaps\n                    const itemWidth = this.itemWidths[this.currentIndex] || this.wrapperElement.nativeElement.offsetWidth;\n                    // If we have gaps, consider them too\n                    const gapWidth = this.config.itemGap ?\n                        parseInt(this.config.itemGap.replace('px', ''), 10) : 0;\n                    this.currentTranslate = this.currentIndex * (itemWidth + gapWidth);\n                }\n            }\n        }\n        else {\n            const scrollAmount = this.getScrollAmount();\n            this.currentTranslate = Math.max(0, this.currentTranslate - scrollAmount);\n        }\n        this.checkOverflow();\n    }\n    next() {\n        const track = this.trackElement.nativeElement;\n        const wrapper = this.wrapperElement.nativeElement;\n        if (this.config.enableOneItemScroll) {\n            if (this.currentIndex < this.filteredItems.length - 1) {\n                // Get the width of the current item\n                const itemWidth = this.itemWidths[this.currentIndex] || wrapper.offsetWidth;\n                // If we have gaps, consider them too\n                const gapWidth = this.config.itemGap ?\n                    parseInt(this.config.itemGap.replace('px', ''), 10) : 0;\n                this.currentIndex++;\n                // Calculate position based on all previous items plus gaps\n                if (this.config.itemWidth === '100%') {\n                    // For 100% width items, simply multiply by the index\n                    this.currentTranslate = this.currentIndex * (itemWidth + gapWidth);\n                }\n                else {\n                    // For variable width items, add the current item width\n                    this.currentTranslate += itemWidth + gapWidth;\n                }\n            }\n        }\n        else {\n            const scrollAmount = this.getScrollAmount();\n            const maxTranslate = this.isVertical\n                ? track.offsetHeight - wrapper.offsetHeight\n                : track.offsetWidth - wrapper.offsetWidth;\n            this.currentTranslate = Math.min(maxTranslate, this.currentTranslate + scrollAmount);\n        }\n        this.checkOverflow();\n    }\n    /**\n     * Gets the button shape styles based on configuration.\n     * @private\n     * @returns {Record<string, string>} The button shape styles\n     */\n    getButtonShapeStyles() {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const shape = (_a = this.config.navigationStyle) === null || _a === void 0 ? void 0 : _a.buttonShape;\n        // If borderRadius is explicitly set in button styles, warn about conflict\n        if (((_c = (_b = this.config.navigationStyle) === null || _b === void 0 ? void 0 : _b.nextButton) === null || _c === void 0 ? void 0 : _c['borderRadius']) ||\n            ((_e = (_d = this.config.navigationStyle) === null || _d === void 0 ? void 0 : _d.prevButton) === null || _e === void 0 ? void 0 : _e['borderRadius']) ||\n            ((_g = (_f = this.config.searchStyle) === null || _f === void 0 ? void 0 : _f.button) === null || _g === void 0 ? void 0 : _g['borderRadius'])) {\n            console.warn('Both buttonShape and borderRadius are set. buttonShape will take precedence.');\n        }\n        switch (shape) {\n            case 'circle':\n                return { borderRadius: '50%' };\n            case 'rounded':\n                return { borderRadius: '4px' };\n            case 'square':\n            default:\n                return { borderRadius: '0' };\n        }\n    }\n    /**\n     * Gets the styles for the next navigation button.\n     * @returns {Record<string, string>} The button styles\n     */\n    get nextButtonStyles() {\n        var _a, _b;\n        const buttonStyles = Object.assign({}, (((_a = this.config.navigationStyle) === null || _a === void 0 ? void 0 : _a.nextButton) || {}));\n        const shapeStyles = this.getButtonShapeStyles();\n        // Remove borderRadius from buttonStyles if shape is specified\n        if (((_b = this.config.navigationStyle) === null || _b === void 0 ? void 0 : _b.buttonShape) && buttonStyles) {\n            delete buttonStyles['borderRadius'];\n        }\n        return Object.assign(Object.assign({}, shapeStyles), buttonStyles);\n    }\n    /**\n     * Gets the styles for the previous navigation button.\n     * @returns {Record<string, string>} The button styles\n     */\n    get prevButtonStyles() {\n        var _a, _b;\n        const buttonStyles = Object.assign({}, (((_a = this.config.navigationStyle) === null || _a === void 0 ? void 0 : _a.prevButton) || {}));\n        const shapeStyles = this.getButtonShapeStyles();\n        // Remove borderRadius from buttonStyles if shape is specified\n        if (((_b = this.config.navigationStyle) === null || _b === void 0 ? void 0 : _b.buttonShape) && buttonStyles) {\n            delete buttonStyles['borderRadius'];\n        }\n        return Object.assign(Object.assign({}, shapeStyles), buttonStyles);\n    }\n    /**\n     * Gets the styles for the search button.\n     * @returns {Record<string, string>} The button styles\n     */\n    get searchButtonStyles() {\n        var _a, _b;\n        const buttonStyles = Object.assign({}, (((_a = this.config.searchStyle) === null || _a === void 0 ? void 0 : _a.button) || {}));\n        const shapeStyles = this.getButtonShapeStyles();\n        // Remove borderRadius from buttonStyles if shape is specified\n        if (((_b = this.config.navigationStyle) === null || _b === void 0 ? void 0 : _b.buttonShape) && buttonStyles) {\n            delete buttonStyles['borderRadius'];\n        }\n        return Object.assign(Object.assign({}, shapeStyles), buttonStyles);\n    }\n    /** Get styles for carousel items */\n    getItemStyle(index) {\n        const baseStyles = {\n            width: this.config.itemWidth || '200px',\n            height: this.config.itemHeight || '100%',\n            flexShrink: '0',\n            flexGrow: '0',\n            boxSizing: 'border-box'\n        };\n        // Ensure width is relative to parent when set to 100%\n        if (this.config.itemWidth === '100%' && this.config.enableOneItemScroll) {\n            baseStyles['width'] = '100%';\n            baseStyles['maxWidth'] = '100%';\n        }\n        if (!this.config.itemGap)\n            return baseStyles;\n        const marginProperty = this.isVertical ? 'marginTop' : 'marginLeft';\n        return Object.assign(Object.assign({}, baseStyles), { [marginProperty]: index === 0 ? '0' : this.config.itemGap });\n    }\n    get contentPadding() {\n        return this.config.contentPadding || '4px';\n    }\n    get animationDuration() {\n        return this.config.animationDuration || '300ms';\n    }\n    get animationTiming() {\n        return this.config.animationTiming || 'ease';\n    }\n    get showSearch() {\n        var _a;\n        return (_a = this.config.enableSearch) !== null && _a !== void 0 ? _a : false;\n    }\n    get searchPlaceholder() {\n        return this.config.searchPlaceholder || 'Search...';\n    }\n    get searchModalTitle() {\n        return this.config.searchModalTitle || 'Filter Items';\n    }\n    get searchModalStyles() {\n        var _a;\n        return ((_a = this.config.searchStyle) === null || _a === void 0 ? void 0 : _a.modal) || {};\n    }\n    toggleSearchModal() {\n        this.isSearchModalOpen = !this.isSearchModalOpen;\n        if (this.isSearchModalOpen && this.searchInput) {\n            setTimeout(() => {\n                this.searchInput.nativeElement.focus();\n            });\n        }\n    }\n    closeSearchModal() {\n        this.isSearchModalOpen = false;\n    }\n    applySearch() {\n        const query = this.searchQuery.trim().toLowerCase();\n        if (!query) {\n            this.filteredItems = this.items;\n        }\n        else {\n            this.filteredItems = this.items.filter((item) => {\n                if (typeof item === 'string') {\n                    return item.toLowerCase().includes(query);\n                }\n                return Object.values(item).some((value) => typeof value === 'string' && value.toLowerCase().includes(query));\n            });\n        }\n        this.currentTranslate = 0;\n        this.currentIndex = 0;\n        this.checkOverflow();\n        this.closeSearchModal();\n    }\n    handleClickOutside(event) {\n        const searchContainer = document.querySelector('.nsc__search');\n        if (this.isSearchModalOpen &&\n            searchContainer &&\n            !searchContainer.contains(event.target)) {\n            this.closeSearchModal();\n        }\n    }\n    getEmptyStateStyle() {\n        return this.getItemStyle(0);\n    }\n    resetSearch() {\n        this.searchQuery = '';\n        this.filteredItems = this.items;\n        this.currentTranslate = 0;\n        this.currentIndex = 0;\n        // Recalculate item widths when items change\n        setTimeout(() => {\n            this.calculateItemWidths();\n            this.checkOverflow();\n        });\n    }\n    /** Get navigation icons based on configuration and orientation */\n    getNavigationIcons() {\n        var _a;\n        const defaultIcons = {\n            horizontal: { prev: '❮', next: '❯' },\n            vertical: { prev: '❮', next: '❯' },\n            search: '🔍'\n        };\n        const configIcons = ((_a = this.config.navigationStyle) === null || _a === void 0 ? void 0 : _a.icons) || {};\n        const verticalIcons = configIcons.vertical || {};\n        if (this.isVertical) {\n            return {\n                prev: verticalIcons.prev || defaultIcons.vertical.prev,\n                next: verticalIcons.next || defaultIcons.vertical.next,\n                search: configIcons.search || defaultIcons.search\n            };\n        }\n        return {\n            prev: configIcons.prev || defaultIcons.horizontal.prev,\n            next: configIcons.next || defaultIcons.horizontal.next,\n            search: configIcons.search || defaultIcons.search\n        };\n    }\n    /** Get icon for previous button */\n    get prevIcon() {\n        return this.getNavigationIcons().prev;\n    }\n    /** Get icon for next button */\n    get nextIcon() {\n        return this.getNavigationIcons().next;\n    }\n    /** Get icon for search button */\n    get searchIcon() {\n        return this.getNavigationIcons().search;\n    }\n    /** Get icon styles based on button configuration */\n    get nextIconStyles() {\n        var _a;\n        const buttonStyles = ((_a = this.config.navigationStyle) === null || _a === void 0 ? void 0 : _a.nextButton) || {};\n        return {\n            color: buttonStyles['color'] || '#666'\n        };\n    }\n    /** Get icon styles based on button configuration */\n    get prevIconStyles() {\n        var _a;\n        const buttonStyles = ((_a = this.config.navigationStyle) === null || _a === void 0 ? void 0 : _a.prevButton) || {};\n        return {\n            color: buttonStyles['color'] || '#666'\n        };\n    }\n    /** Get icon styles based on button configuration */\n    get searchIconStyles() {\n        var _a;\n        const buttonStyles = ((_a = this.config.searchStyle) === null || _a === void 0 ? void 0 : _a.button) || {};\n        return {\n            color: buttonStyles['color'] || '#666'\n        };\n    }\n    /** Get whether navigation should be shown */\n    get showNavigation() {\n        var _a;\n        return (_a = this.config.showNavigation) !== null && _a !== void 0 ? _a : true;\n    }\n}\nCarouselComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: CarouselComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nCarouselComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: CarouselComponent, selector: \"nsc\", inputs: { items: \"items\", config: \"config\" }, host: { listeners: { \"document:click\": \"handleClickOutside($event)\" } }, queries: [{ propertyName: \"itemTemplate\", first: true, predicate: [\"carouselItem\"], descendants: true }], viewQueries: [{ propertyName: \"trackElement\", first: true, predicate: [\"track\"], descendants: true }, { propertyName: \"wrapperElement\", first: true, predicate: [\"wrapper\"], descendants: true }, { propertyName: \"searchInput\", first: true, predicate: [\"searchInput\"], descendants: true }], ngImport: i0, template: `\n    <div [class.nsc--vertical]=\"isVertical\" [ngStyle]=\"containerStyles\" class=\"nsc\">\n      <div\n        #wrapper\n        [style.--content-padding]=\"contentPadding\"\n        class=\"nsc__wrapper\">\n        <div\n          #track\n          [ngStyle]=\"trackStyles\"\n          [class.nsc__track--vertical]=\"isVertical\"\n          [style.--animation-duration]=\"animationDuration\"\n          [style.--animation-timing]=\"animationTiming\"\n          class=\"nsc__track\">\n          <ng-container *ngIf=\"filteredItems.length > 0; else noResults\">\n            <ng-container *ngFor=\"let item of filteredItems; let i = index\">\n              <div class=\"nsc__item\" [ngStyle]=\"getItemStyle(i)\">\n                <ng-container *ngIf=\"itemTemplate; else defaultTemplate\">\n                  <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item, index: i }\"></ng-container>\n                </ng-container>\n                <ng-template #defaultTemplate>\n                  <div class=\"nsc__item-default\">\n                    {{ item }}\n                  </div>\n                </ng-template>\n              </div>\n            </ng-container>\n          </ng-container>\n          <ng-template #noResults>\n            <div class=\"nsc__item\" [ngStyle]=\"getEmptyStateStyle()\">\n              <div class=\"nsc__empty-state\">\n                <div class=\"nsc__empty-icon\">📭</div>\n                <div class=\"nsc__empty-text\">No items found</div>\n                <button class=\"nsc__reset-button\" (click)=\"resetSearch()\">\n                  Show all items\n                </button>\n              </div>\n            </div>\n          </ng-template>\n        </div>\n      </div>\n\n      <div *ngIf=\"showNavigation\" class=\"nsc__nav-controls\">\n        <div *ngIf=\"showSearch\" class=\"nsc__search\">\n          <button [ngStyle]=\"searchButtonStyles\" (click)=\"toggleSearchModal()\" class=\"nsc__nav-button nsc__nav-button--search\">\n            <span class=\"nsc__nav-icon\" [ngStyle]=\"searchIconStyles\">{{ searchIcon }}</span>\n          </button>\n          <div *ngIf=\"isSearchModalOpen\" [class.nsc__dropdown--vertical]=\"isVertical\" (click)=\"$event.stopPropagation()\" class=\"nsc__dropdown\" >\n            <input\n              type=\"text\"\n              [placeholder]=\"searchPlaceholder\"\n              [(ngModel)]=\"searchQuery\"\n              (keyup.enter)=\"applySearch()\"\n              class=\"nsc__search-input\"\n              #searchInput\n            />\n          </div>\n        </div>\n        \n        <button \n          [class.nsc__nav-button--disabled]=\"!showPrevButton\" \n          [disabled]=\"!showPrevButton\" \n          [ngStyle]=\"prevButtonStyles\" \n          (click)=\"previous()\" \n          class=\"nsc__nav-button\">\n          <span class=\"nsc__nav-icon\" [ngStyle]=\"prevIconStyles\">{{ prevIcon }}</span>\n        </button>\n        \n        <button\n          [class.nsc__nav-button--disabled]=\"!showNextButton\"\n          [disabled]=\"!showNextButton\"\n          [ngStyle]=\"nextButtonStyles\"\n          (click)=\"next()\"\n          class=\"nsc__nav-button\">\n          <span class=\"nsc__nav-icon\" [ngStyle]=\"nextIconStyles\">{{ nextIcon }}</span>\n        </button>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".nsc{position:relative;overflow:hidden;width:100%;display:flex;flex-direction:column}.nsc--vertical{flex-direction:column}.nsc__wrapper{flex:1;overflow:hidden;position:relative;padding:var(--content-padding,10px) 0;width:100%}.nsc--vertical .nsc__wrapper{padding:0 var(--content-padding,10px)}.nsc__track{display:flex;flex-wrap:nowrap;transition:transform var(--animation-duration,.3s) var(--animation-timing,ease);width:fit-content;min-width:100%}.nsc__track--vertical{flex-direction:column;width:100%;height:fit-content}.nsc__item{flex:0 0 auto;box-sizing:border-box}.nsc--vertical .nsc__item{width:100%}.nsc__item-default{background:#fff;height:100%;display:flex;align-items:center;justify-content:center;border:1px solid #e0e0e0;border-radius:4px;padding:20px}.nsc__nav-controls{position:absolute;bottom:16px;right:16px;display:flex;gap:24px;z-index:10}.nsc__nav-button{background:#fff;border:1px solid #e0e0e0;width:32px;height:32px;padding:0;margin:0;display:flex;align-items:center;justify-content:center;cursor:pointer;transition:all .2s ease;z-index:1}.nsc__nav-icon{display:flex;align-items:center;justify-content:center;width:100%;height:100%;font-size:16px;line-height:1}.nsc__nav-button:hover:not(.nsc__nav-button--disabled){opacity:.8;transform:scale(1.05)}.nsc__nav-button--disabled{opacity:.4;cursor:not-allowed;background-color:#f5f5f5;border-color:#ddd;transition:all .2s ease}.nsc__search{position:relative}.nsc__dropdown{position:absolute;background:#fff;border:1px solid #e0e0e0;border-radius:4px;box-shadow:0 2px 8px #0000001a;z-index:1000;min-width:200px;top:100%;right:0;margin-top:8px}.nsc__dropdown--vertical{right:auto;left:100%;top:0;margin-top:0;margin-left:8px}.nsc__search-input{width:100%;padding:8px 12px;border:none;border-radius:4px;font-size:14px;outline:none}.nsc__empty-state{display:flex;flex-direction:column;align-items:center;justify-content:center;padding:30px;text-align:center;color:#666}.nsc__empty-icon{font-size:32px;margin-bottom:12px}.nsc__empty-text{font-size:16px;margin-bottom:12px}.nsc__reset-button{background:none;border:none;padding:6px 12px;font-size:13px;color:#007bff;cursor:pointer;transition:opacity .2s ease}.nsc__reset-button:hover{opacity:.7}.nsc--vertical .nsc__nav-button .nsc__nav-icon{transform:rotate(90deg)}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: CarouselComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'nsc', template: `\n    <div [class.nsc--vertical]=\"isVertical\" [ngStyle]=\"containerStyles\" class=\"nsc\">\n      <div\n        #wrapper\n        [style.--content-padding]=\"contentPadding\"\n        class=\"nsc__wrapper\">\n        <div\n          #track\n          [ngStyle]=\"trackStyles\"\n          [class.nsc__track--vertical]=\"isVertical\"\n          [style.--animation-duration]=\"animationDuration\"\n          [style.--animation-timing]=\"animationTiming\"\n          class=\"nsc__track\">\n          <ng-container *ngIf=\"filteredItems.length > 0; else noResults\">\n            <ng-container *ngFor=\"let item of filteredItems; let i = index\">\n              <div class=\"nsc__item\" [ngStyle]=\"getItemStyle(i)\">\n                <ng-container *ngIf=\"itemTemplate; else defaultTemplate\">\n                  <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item, index: i }\"></ng-container>\n                </ng-container>\n                <ng-template #defaultTemplate>\n                  <div class=\"nsc__item-default\">\n                    {{ item }}\n                  </div>\n                </ng-template>\n              </div>\n            </ng-container>\n          </ng-container>\n          <ng-template #noResults>\n            <div class=\"nsc__item\" [ngStyle]=\"getEmptyStateStyle()\">\n              <div class=\"nsc__empty-state\">\n                <div class=\"nsc__empty-icon\">📭</div>\n                <div class=\"nsc__empty-text\">No items found</div>\n                <button class=\"nsc__reset-button\" (click)=\"resetSearch()\">\n                  Show all items\n                </button>\n              </div>\n            </div>\n          </ng-template>\n        </div>\n      </div>\n\n      <div *ngIf=\"showNavigation\" class=\"nsc__nav-controls\">\n        <div *ngIf=\"showSearch\" class=\"nsc__search\">\n          <button [ngStyle]=\"searchButtonStyles\" (click)=\"toggleSearchModal()\" class=\"nsc__nav-button nsc__nav-button--search\">\n            <span class=\"nsc__nav-icon\" [ngStyle]=\"searchIconStyles\">{{ searchIcon }}</span>\n          </button>\n          <div *ngIf=\"isSearchModalOpen\" [class.nsc__dropdown--vertical]=\"isVertical\" (click)=\"$event.stopPropagation()\" class=\"nsc__dropdown\" >\n            <input\n              type=\"text\"\n              [placeholder]=\"searchPlaceholder\"\n              [(ngModel)]=\"searchQuery\"\n              (keyup.enter)=\"applySearch()\"\n              class=\"nsc__search-input\"\n              #searchInput\n            />\n          </div>\n        </div>\n        \n        <button \n          [class.nsc__nav-button--disabled]=\"!showPrevButton\" \n          [disabled]=\"!showPrevButton\" \n          [ngStyle]=\"prevButtonStyles\" \n          (click)=\"previous()\" \n          class=\"nsc__nav-button\">\n          <span class=\"nsc__nav-icon\" [ngStyle]=\"prevIconStyles\">{{ prevIcon }}</span>\n        </button>\n        \n        <button\n          [class.nsc__nav-button--disabled]=\"!showNextButton\"\n          [disabled]=\"!showNextButton\"\n          [ngStyle]=\"nextButtonStyles\"\n          (click)=\"next()\"\n          class=\"nsc__nav-button\">\n          <span class=\"nsc__nav-icon\" [ngStyle]=\"nextIconStyles\">{{ nextIcon }}</span>\n        </button>\n      </div>\n    </div>\n  `, styles: [\".nsc{position:relative;overflow:hidden;width:100%;display:flex;flex-direction:column}.nsc--vertical{flex-direction:column}.nsc__wrapper{flex:1;overflow:hidden;position:relative;padding:var(--content-padding,10px) 0;width:100%}.nsc--vertical .nsc__wrapper{padding:0 var(--content-padding,10px)}.nsc__track{display:flex;flex-wrap:nowrap;transition:transform var(--animation-duration,.3s) var(--animation-timing,ease);width:fit-content;min-width:100%}.nsc__track--vertical{flex-direction:column;width:100%;height:fit-content}.nsc__item{flex:0 0 auto;box-sizing:border-box}.nsc--vertical .nsc__item{width:100%}.nsc__item-default{background:#fff;height:100%;display:flex;align-items:center;justify-content:center;border:1px solid #e0e0e0;border-radius:4px;padding:20px}.nsc__nav-controls{position:absolute;bottom:16px;right:16px;display:flex;gap:24px;z-index:10}.nsc__nav-button{background:#fff;border:1px solid #e0e0e0;width:32px;height:32px;padding:0;margin:0;display:flex;align-items:center;justify-content:center;cursor:pointer;transition:all .2s ease;z-index:1}.nsc__nav-icon{display:flex;align-items:center;justify-content:center;width:100%;height:100%;font-size:16px;line-height:1}.nsc__nav-button:hover:not(.nsc__nav-button--disabled){opacity:.8;transform:scale(1.05)}.nsc__nav-button--disabled{opacity:.4;cursor:not-allowed;background-color:#f5f5f5;border-color:#ddd;transition:all .2s ease}.nsc__search{position:relative}.nsc__dropdown{position:absolute;background:#fff;border:1px solid #e0e0e0;border-radius:4px;box-shadow:0 2px 8px #0000001a;z-index:1000;min-width:200px;top:100%;right:0;margin-top:8px}.nsc__dropdown--vertical{right:auto;left:100%;top:0;margin-top:0;margin-left:8px}.nsc__search-input{width:100%;padding:8px 12px;border:none;border-radius:4px;font-size:14px;outline:none}.nsc__empty-state{display:flex;flex-direction:column;align-items:center;justify-content:center;padding:30px;text-align:center;color:#666}.nsc__empty-icon{font-size:32px;margin-bottom:12px}.nsc__empty-text{font-size:16px;margin-bottom:12px}.nsc__reset-button{background:none;border:none;padding:6px 12px;font-size:13px;color:#007bff;cursor:pointer;transition:opacity .2s ease}.nsc__reset-button:hover{opacity:.7}.nsc--vertical .nsc__nav-button .nsc__nav-icon{transform:rotate(90deg)}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { items: [{\n                type: Input\n            }], config: [{\n                type: Input\n            }], itemTemplate: [{\n                type: ContentChild,\n                args: ['carouselItem']\n            }], trackElement: [{\n                type: ViewChild,\n                args: ['track']\n            }], wrapperElement: [{\n                type: ViewChild,\n                args: ['wrapper']\n            }], searchInput: [{\n                type: ViewChild,\n                args: ['searchInput']\n            }], handleClickOutside: [{\n                type: HostListener,\n                args: ['document:click', ['$event']]\n            }] } });\n\nclass NgSmoothCarouselModule {\n}\nNgSmoothCarouselModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: NgSmoothCarouselModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgSmoothCarouselModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: NgSmoothCarouselModule, declarations: [CarouselComponent], imports: [CommonModule, FormsModule], exports: [CarouselComponent] });\nNgSmoothCarouselModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: NgSmoothCarouselModule, imports: [CommonModule, FormsModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: NgSmoothCarouselModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [CarouselComponent],\n                    imports: [CommonModule, FormsModule],\n                    exports: [CarouselComponent],\n                }]\n        }] });\n\n/*\n * Public API Surface of ng-smooth-carousel\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CarouselComponent, NgSmoothCarouselModule };\n//# sourceMappingURL=ng-smooth-carousel.mjs.map\n","map":{"version":3,"file":"ng-smooth-carousel.mjs","sources":["../../../projects/ng-smooth-carousel/src/lib/carousel.component.ts","../../../projects/ng-smooth-carousel/src/lib/carousel.module.ts","../../../projects/ng-smooth-carousel/src/public-api.ts","../../../projects/ng-smooth-carousel/src/ng-smooth-carousel.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  ContentChild,\n  TemplateRef,\n  ElementRef,\n  AfterViewInit,\n  OnDestroy,\n  ViewChild,\n  ChangeDetectorRef,\n  HostListener,\n  OnInit,\n} from '@angular/core';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil, debounceTime } from 'rxjs/operators';\nimport { CarouselConfig } from './carousel-config.interface';\n\n/**\n * A smooth, customizable carousel component for Angular applications.\n * \n * @description\n * This component provides a flexible carousel/slider with the following features:\n * - Horizontal and vertical orientations\n * - Customizable navigation buttons with different shapes and styles\n * - Search functionality with filtering\n * - Responsive design with configurable item sizes\n * - Custom item templates\n * - Autoplay with configurable delay\n * - Loop functionality\n * \n * @example\n * ```html\n * <nsc\n *   [items]=\"items\"\n *   [config]=\"{\n *     orientation: 'horizontal',\n *     navigationStyle: {\n *       buttonShape: 'rounded',\n *       nextButton: { color: '#333' },\n *       prevButton: { color: '#333' }\n *     }\n *   }\">\n *   <ng-template #carouselItem let-item>\n *     {{ item }}\n *   </ng-template>\n * </nsc>\n * ```\n */\n@Component({\n  selector: 'nsc',\n  template: `\n    <div [class.nsc--vertical]=\"isVertical\" [ngStyle]=\"containerStyles\" class=\"nsc\">\n      <div\n        #wrapper\n        [style.--content-padding]=\"contentPadding\"\n        class=\"nsc__wrapper\">\n        <div\n          #track\n          [ngStyle]=\"trackStyles\"\n          [class.nsc__track--vertical]=\"isVertical\"\n          [style.--animation-duration]=\"animationDuration\"\n          [style.--animation-timing]=\"animationTiming\"\n          class=\"nsc__track\">\n          <ng-container *ngIf=\"filteredItems.length > 0; else noResults\">\n            <ng-container *ngFor=\"let item of filteredItems; let i = index\">\n              <div class=\"nsc__item\" [ngStyle]=\"getItemStyle(i)\">\n                <ng-container *ngIf=\"itemTemplate; else defaultTemplate\">\n                  <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item, index: i }\"></ng-container>\n                </ng-container>\n                <ng-template #defaultTemplate>\n                  <div class=\"nsc__item-default\">\n                    {{ item }}\n                  </div>\n                </ng-template>\n              </div>\n            </ng-container>\n          </ng-container>\n          <ng-template #noResults>\n            <div class=\"nsc__item\" [ngStyle]=\"getEmptyStateStyle()\">\n              <div class=\"nsc__empty-state\">\n                <div class=\"nsc__empty-icon\">📭</div>\n                <div class=\"nsc__empty-text\">No items found</div>\n                <button class=\"nsc__reset-button\" (click)=\"resetSearch()\">\n                  Show all items\n                </button>\n              </div>\n            </div>\n          </ng-template>\n        </div>\n      </div>\n\n      <div *ngIf=\"showNavigation\" class=\"nsc__nav-controls\">\n        <div *ngIf=\"showSearch\" class=\"nsc__search\">\n          <button [ngStyle]=\"searchButtonStyles\" (click)=\"toggleSearchModal()\" class=\"nsc__nav-button nsc__nav-button--search\">\n            <span class=\"nsc__nav-icon\" [ngStyle]=\"searchIconStyles\">{{ searchIcon }}</span>\n          </button>\n          <div *ngIf=\"isSearchModalOpen\" [class.nsc__dropdown--vertical]=\"isVertical\" (click)=\"$event.stopPropagation()\" class=\"nsc__dropdown\" >\n            <input\n              type=\"text\"\n              [placeholder]=\"searchPlaceholder\"\n              [(ngModel)]=\"searchQuery\"\n              (keyup.enter)=\"applySearch()\"\n              class=\"nsc__search-input\"\n              #searchInput\n            />\n          </div>\n        </div>\n        \n        <button \n          [class.nsc__nav-button--disabled]=\"!showPrevButton\" \n          [disabled]=\"!showPrevButton\" \n          [ngStyle]=\"prevButtonStyles\" \n          (click)=\"previous()\" \n          class=\"nsc__nav-button\">\n          <span class=\"nsc__nav-icon\" [ngStyle]=\"prevIconStyles\">{{ prevIcon }}</span>\n        </button>\n        \n        <button\n          [class.nsc__nav-button--disabled]=\"!showNextButton\"\n          [disabled]=\"!showNextButton\"\n          [ngStyle]=\"nextButtonStyles\"\n          (click)=\"next()\"\n          class=\"nsc__nav-button\">\n          <span class=\"nsc__nav-icon\" [ngStyle]=\"nextIconStyles\">{{ nextIcon }}</span>\n        </button>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .nsc{position:relative;overflow:hidden;width:100%;display:flex;flex-direction:column}\n      .nsc--vertical{flex-direction:column}\n      .nsc__wrapper{flex:1;overflow:hidden;position:relative;padding:var(--content-padding,10px) 0;width:100%}\n      .nsc--vertical .nsc__wrapper{padding:0 var(--content-padding,10px)}\n      .nsc__track{display:flex;flex-wrap:nowrap;transition:transform var(--animation-duration,.3s) var(--animation-timing,ease);width:fit-content;min-width:100%}\n      .nsc__track--vertical{flex-direction:column;width:100%;height:fit-content}\n      .nsc__item{flex:0 0 auto;box-sizing:border-box}\n      .nsc--vertical .nsc__item{width:100%}\n      .nsc__item-default{background:#fff;height:100%;display:flex;align-items:center;justify-content:center;border:1px solid #e0e0e0;border-radius:4px;padding:20px}\n      .nsc__nav-controls{position:absolute;bottom:16px;right:16px;display:flex;gap:24px;z-index:10}\n      .nsc__nav-button{background:#fff;border:1px solid #e0e0e0;width:32px;height:32px;padding:0;margin:0;display:flex;align-items:center;justify-content:center;cursor:pointer;transition:all .2s ease;z-index:1}\n      .nsc__nav-icon{display:flex;align-items:center;justify-content:center;width:100%;height:100%;font-size:16px;line-height:1}\n      .nsc__nav-button:hover:not(.nsc__nav-button--disabled){opacity:.8;transform:scale(1.05)}\n      .nsc__nav-button--disabled{opacity:.4;cursor:not-allowed;background-color:#f5f5f5;border-color:#ddd;transition:all .2s ease}\n      .nsc__search{position:relative}\n      .nsc__dropdown{position:absolute;background:#fff;border:1px solid #e0e0e0;border-radius:4px;box-shadow:0 2px 8px rgba(0,0,0,.1);z-index:1000;min-width:200px;top:100%;right:0;margin-top:8px}\n      .nsc__dropdown--vertical{right:auto;left:100%;top:0;margin-top:0;margin-left:8px}\n      .nsc__search-input{width:100%;padding:8px 12px;border:none;border-radius:4px;font-size:14px;outline:none}\n      .nsc__empty-state{display:flex;flex-direction:column;align-items:center;justify-content:center;padding:30px;text-align:center;color:#666}\n      .nsc__empty-icon{font-size:32px;margin-bottom:12px}\n      .nsc__empty-text{font-size:16px;margin-bottom:12px}\n      .nsc__reset-button{background:none;border:none;padding:6px 12px;font-size:13px;color:#007bff;cursor:pointer;transition:opacity .2s ease}\n      .nsc__reset-button:hover{opacity:.7}\n      .nsc--vertical .nsc__nav-button .nsc__nav-icon{transform:rotate(90deg)}\n    `,\n  ],\n})\nexport class CarouselComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input() items: any[] = [];\n  @Input() config: CarouselConfig = {};\n\n  @ContentChild('carouselItem') itemTemplate!: TemplateRef<any>;\n  @ViewChild('track') trackElement!: ElementRef<HTMLElement>;\n  @ViewChild('wrapper') wrapperElement!: ElementRef<HTMLElement>;\n  @ViewChild('searchInput') searchInput!: ElementRef<HTMLInputElement>;\n\n  private currentTranslate = 0;\n  private currentIndex = 0;\n  private destroy$ = new Subject<void>();\n  private autoplayInterval?: ReturnType<typeof setInterval>;\n  private itemWidths: number[] = [];\n\n  private readonly scrollSizeMap: Record<string, number> = {\n    'xs': 50,\n    'sm': 100,\n    'md': 150,\n    'lg': 200,\n    'xl': 250,\n    '2xl': 300,\n    '3xl': 350,\n    '4xl': 400,\n    '5xl': 450,\n    '6xl': 500,\n    '7xl': 550,\n    '8xl': 600,\n    '9xl': 650,\n    '10xl': 700,\n    'full': 1,\n  };\n\n  showPrevButton = false;\n  showNextButton = false;\n  searchQuery = '';\n  isSearchModalOpen = false;\n  filteredItems: any[] = [];\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.filteredItems = this.items;\n  }\n\n  private parseTimeToMs(time: string): number {\n    if (time.endsWith('ms')) {\n      return parseInt(time.slice(0, -2), 10);\n    }\n    if (time.endsWith('s')) {\n      return parseFloat(time.slice(0, -1)) * 1000;\n    }\n    return parseInt(time, 10);\n  }\n\n  private setupAutoplay(): void {\n    if (this.autoplayInterval) {\n      clearInterval(this.autoplayInterval);\n    }\n\n    if (!this.config.autoplay) return;\n\n    const delay = this.parseTimeToMs(this.config.autoplayDelay || '3000ms');\n\n    this.autoplayInterval = setInterval(() => {\n      const track = this.trackElement?.nativeElement;\n      const wrapper = this.wrapperElement?.nativeElement;\n      \n      if (!track || !wrapper) return;\n      \n      const maxTranslate = this.isVertical\n        ? track.offsetHeight - wrapper.offsetHeight\n        : track.offsetWidth - wrapper.offsetWidth;\n\n      if (this.currentTranslate >= maxTranslate) {\n        if (this.config.loop) {\n          this.currentTranslate = 0;\n        } else {\n          clearInterval(this.autoplayInterval);\n          return;\n        }\n      } else {\n        this.next();\n      }\n      this.cdr.detectChanges();\n    }, delay);\n  }\n\n  ngAfterViewInit(): void {\n    this.initializeCarousel();\n    this.setupResizeListener();\n    this.setupAutoplay();\n    \n    setTimeout(() => {\n      this.calculateItemWidths();\n      this.checkOverflow();\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.autoplayInterval) {\n      clearInterval(this.autoplayInterval);\n    }\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get isVertical(): boolean {\n    return this.config.orientation === 'vertical';\n  }\n\n  get containerStyles(): Record<string, string> {\n    return {\n      width: this.config.containerWidth || '100%',\n      height: this.config.containerHeight || 'auto',\n    };\n  }\n\n  get trackStyles(): Record<string, string> {\n    const baseStyles = {\n      transform: this.isVertical\n        ? `translateY(-${this.currentTranslate}px)`\n        : `translateX(-${this.currentTranslate}px)`,\n    };\n\n    return this.isVertical\n      ? { ...baseStyles, flexDirection: 'column' }\n      : baseStyles;\n  }\n\n  private initializeCarousel(): void {\n    if (!this.trackElement || !this.wrapperElement) return;\n    \n    this.currentTranslate = 0;\n    this.checkOverflow();\n  }\n\n  private setupResizeListener(): void {\n    fromEvent(window, 'resize')\n      .pipe(debounceTime(200), takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.checkOverflow();\n      });\n  }\n\n  private checkOverflow(): void {\n    if (!this.showNavigation) {\n      this.showPrevButton = false;\n      this.showNextButton = false;\n      return;\n    }\n\n    const track = this.trackElement?.nativeElement;\n    const wrapper = this.wrapperElement?.nativeElement;\n\n    if (!track || !wrapper) return;\n\n    if (this.config.enableOneItemScroll) {\n      this.showPrevButton = this.currentIndex > 0;\n      this.showNextButton = this.currentIndex < this.filteredItems.length - 1;\n    } else if (this.isVertical) {\n      this.showPrevButton = this.currentTranslate > 0;\n      this.showNextButton = \n        track.offsetHeight - this.currentTranslate > wrapper.offsetHeight;\n    } else {\n      this.showPrevButton = this.currentTranslate > 0;\n      this.showNextButton = \n        track.offsetWidth - this.currentTranslate > wrapper.offsetWidth;\n    }\n\n    this.cdr.detectChanges();\n  }\n\n  private calculateItemWidths(): void {\n    if (!this.trackElement || !this.wrapperElement) return;\n    \n    const track = this.trackElement.nativeElement;\n    const wrapper = this.wrapperElement.nativeElement;\n    const items = Array.from(track.children) as HTMLElement[];\n    \n    // When items should take up 100% of parent width\n    if (this.config.itemWidth === '100%' && this.config.enableOneItemScroll) {\n      // Just use the parent width for all items\n      const parentWidth = wrapper.offsetWidth;\n      this.itemWidths = items.map(() => parentWidth);\n      return;\n    }\n    \n    this.itemWidths = items.map(item => {\n      // Get the full width including margins\n      const style = window.getComputedStyle(item);\n      const width = item.offsetWidth;\n      const marginLeft = parseInt(style.marginLeft || '0', 10);\n      const marginRight = parseInt(style.marginRight || '0', 10);\n      \n      return width + marginLeft + marginRight;\n    });\n  }\n\n  private getScrollAmount(): number {\n    if (this.config.enableOneItemScroll && this.itemWidths.length > 0) {\n      if (this.currentIndex < this.itemWidths.length) {\n        return this.itemWidths[this.currentIndex];\n      }\n      // Fallback to the first item's width if currentIndex is out of bounds\n      return this.itemWidths[0] || this.wrapperElement.nativeElement.offsetWidth;\n    }\n    \n    const size = this.config.scrollSize || 'sm';\n    \n    // If scrollSize is numeric, use it as the number of items to scroll\n    if (size === 'full') {\n      // Use the wrapper's width (parent container) instead of the screen width\n      return this.wrapperElement.nativeElement.offsetWidth;\n    }\n    \n    return this.scrollSizeMap[size] || this.scrollSizeMap['sm'];\n  }\n\n  previous(): void {\n    if (this.config.enableOneItemScroll) {\n      if (this.currentIndex > 0) {\n        this.currentIndex--;\n        // Calculate the exact position based on previous item widths\n        if (this.currentIndex === 0) {\n          // If we're at the first item, ensure we're at the beginning\n          this.currentTranslate = 0;\n        } else {\n          // Calculate position based on widths of all previous items plus gaps\n          const itemWidth = this.itemWidths[this.currentIndex] || this.wrapperElement.nativeElement.offsetWidth;\n          \n          // If we have gaps, consider them too\n          const gapWidth = this.config.itemGap ? \n            parseInt(this.config.itemGap.replace('px', ''), 10) : 0;\n          \n          this.currentTranslate = this.currentIndex * (itemWidth + gapWidth);\n        }\n      }\n    } else {\n      const scrollAmount = this.getScrollAmount();\n      this.currentTranslate = Math.max(0, this.currentTranslate - scrollAmount);\n    }\n    this.checkOverflow();\n  }\n\n  next(): void {\n    const track = this.trackElement.nativeElement;\n    const wrapper = this.wrapperElement.nativeElement;\n    \n    if (this.config.enableOneItemScroll) {\n      if (this.currentIndex < this.filteredItems.length - 1) {\n        // Get the width of the current item\n        const itemWidth = this.itemWidths[this.currentIndex] || wrapper.offsetWidth;\n        \n        // If we have gaps, consider them too\n        const gapWidth = this.config.itemGap ? \n          parseInt(this.config.itemGap.replace('px', ''), 10) : 0;\n        \n        this.currentIndex++;\n        \n        // Calculate position based on all previous items plus gaps\n        if (this.config.itemWidth === '100%') {\n          // For 100% width items, simply multiply by the index\n          this.currentTranslate = this.currentIndex * (itemWidth + gapWidth);\n        } else {\n          // For variable width items, add the current item width\n          this.currentTranslate += itemWidth + gapWidth;\n        }\n      }\n    } else {\n      const scrollAmount = this.getScrollAmount();\n      const maxTranslate = this.isVertical\n        ? track.offsetHeight - wrapper.offsetHeight\n        : track.offsetWidth - wrapper.offsetWidth;\n\n      this.currentTranslate = Math.min(\n        maxTranslate,\n        this.currentTranslate + scrollAmount\n      );\n    }\n    this.checkOverflow();\n  }\n\n  /**\n   * Gets the button shape styles based on configuration.\n   * @private\n   * @returns {Record<string, string>} The button shape styles\n   */\n  private getButtonShapeStyles(): Record<string, string> {\n    const shape = this.config.navigationStyle?.buttonShape;\n    \n    // If borderRadius is explicitly set in button styles, warn about conflict\n    if (this.config.navigationStyle?.nextButton?.['borderRadius'] || \n        this.config.navigationStyle?.prevButton?.['borderRadius'] ||\n        this.config.searchStyle?.button?.['borderRadius']) {\n      console.warn('Both buttonShape and borderRadius are set. buttonShape will take precedence.');\n    }\n\n    switch (shape) {\n      case 'circle':\n        return { borderRadius: '50%' };\n      case 'rounded':\n        return { borderRadius: '4px' };\n      case 'square':\n      default:\n        return { borderRadius: '0' };\n    }\n  }\n\n  /**\n   * Gets the styles for the next navigation button.\n   * @returns {Record<string, string>} The button styles\n   */\n  get nextButtonStyles(): Record<string, string> {\n    const buttonStyles = { ...(this.config.navigationStyle?.nextButton || {}) };\n    const shapeStyles = this.getButtonShapeStyles();\n    \n    // Remove borderRadius from buttonStyles if shape is specified\n    if (this.config.navigationStyle?.buttonShape && buttonStyles) {\n      delete buttonStyles['borderRadius'];\n    }\n\n    return {\n      ...shapeStyles,\n      ...buttonStyles\n    };\n  }\n\n  /**\n   * Gets the styles for the previous navigation button.\n   * @returns {Record<string, string>} The button styles\n   */\n  get prevButtonStyles(): Record<string, string> {\n    const buttonStyles = { ...(this.config.navigationStyle?.prevButton || {}) };\n    const shapeStyles = this.getButtonShapeStyles();\n    \n    // Remove borderRadius from buttonStyles if shape is specified\n    if (this.config.navigationStyle?.buttonShape && buttonStyles) {\n      delete buttonStyles['borderRadius'];\n    }\n\n    return {\n      ...shapeStyles,\n      ...buttonStyles\n    };\n  }\n\n  /**\n   * Gets the styles for the search button.\n   * @returns {Record<string, string>} The button styles\n   */\n  get searchButtonStyles(): Record<string, string> {\n    const buttonStyles = { ...(this.config.searchStyle?.button || {}) };\n    const shapeStyles = this.getButtonShapeStyles();\n    \n    // Remove borderRadius from buttonStyles if shape is specified\n    if (this.config.navigationStyle?.buttonShape && buttonStyles) {\n      delete buttonStyles['borderRadius'];\n    }\n\n    return {\n      ...shapeStyles,\n      ...buttonStyles\n    };\n  }\n\n  /** Get styles for carousel items */\n  getItemStyle(index: number): Record<string, string> {\n    const baseStyles: Record<string, string> = {\n      width: this.config.itemWidth || '200px',\n      height: this.config.itemHeight || '100%',\n      flexShrink: '0',\n      flexGrow: '0',\n      boxSizing: 'border-box'\n    };\n\n    // Ensure width is relative to parent when set to 100%\n    if (this.config.itemWidth === '100%' && this.config.enableOneItemScroll) {\n      baseStyles['width'] = '100%';\n      baseStyles['maxWidth'] = '100%';\n    }\n\n    if (!this.config.itemGap) return baseStyles;\n\n    const marginProperty = this.isVertical ? 'marginTop' : 'marginLeft';\n    return {\n      ...baseStyles,\n      [marginProperty]: index === 0 ? '0' : this.config.itemGap\n    };\n  }\n\n  get contentPadding(): string {\n    return this.config.contentPadding || '4px';\n  }\n\n  get animationDuration(): string {\n    return this.config.animationDuration || '300ms';\n  }\n\n  get animationTiming(): string {\n    return this.config.animationTiming || 'ease';\n  }\n\n  get showSearch(): boolean {\n    return this.config.enableSearch ?? false;\n  }\n\n  get searchPlaceholder(): string {\n    return this.config.searchPlaceholder || 'Search...';\n  }\n\n  get searchModalTitle(): string {\n    return this.config.searchModalTitle || 'Filter Items';\n  }\n\n  get searchModalStyles(): Record<string, string> {\n    return this.config.searchStyle?.modal || {};\n  }\n\n  toggleSearchModal(): void {\n    this.isSearchModalOpen = !this.isSearchModalOpen;\n    if (this.isSearchModalOpen && this.searchInput) {\n      setTimeout(() => {\n        this.searchInput.nativeElement.focus();\n      });\n    }\n  }\n\n  closeSearchModal(): void {\n    this.isSearchModalOpen = false;\n  }\n\n  applySearch(): void {\n    const query = this.searchQuery.trim().toLowerCase();\n\n    if (!query) {\n      this.filteredItems = this.items;\n    } else {\n      this.filteredItems = this.items.filter((item) => {\n        if (typeof item === 'string') {\n          return item.toLowerCase().includes(query);\n        }\n        return Object.values(item).some(\n          (value) =>\n            typeof value === 'string' && value.toLowerCase().includes(query)\n        );\n      });\n    }\n\n    this.currentTranslate = 0;\n    this.currentIndex = 0;\n    this.checkOverflow();\n    this.closeSearchModal();\n  }\n\n  @HostListener('document:click', ['$event'])\n  handleClickOutside(event: MouseEvent): void {\n    const searchContainer = document.querySelector('.nsc__search');\n    if (\n      this.isSearchModalOpen &&\n      searchContainer &&\n      !searchContainer.contains(event.target as Node)\n    ) {\n      this.closeSearchModal();\n    }\n  }\n\n  getEmptyStateStyle(): Record<string, string> {\n    return this.getItemStyle(0);\n  }\n\n  resetSearch(): void {\n    this.searchQuery = '';\n    this.filteredItems = this.items;\n    this.currentTranslate = 0;\n    this.currentIndex = 0;\n    \n    // Recalculate item widths when items change\n    setTimeout(() => {\n      this.calculateItemWidths();\n      this.checkOverflow();\n    });\n  }\n\n  /** Get navigation icons based on configuration and orientation */\n  private getNavigationIcons(): { prev: string; next: string; search: string } {\n    const defaultIcons = {\n      horizontal: { prev: '❮', next: '❯' },\n      vertical: { prev: '❮', next: '❯' },\n      search: '🔍'\n    };\n\n    const configIcons = this.config.navigationStyle?.icons || {};\n    const verticalIcons = configIcons.vertical || {};\n\n    if (this.isVertical) {\n      return {\n        prev: verticalIcons.prev || defaultIcons.vertical.prev,\n        next: verticalIcons.next || defaultIcons.vertical.next,\n        search: configIcons.search || defaultIcons.search\n      };\n    }\n\n    return {\n      prev: configIcons.prev || defaultIcons.horizontal.prev,\n      next: configIcons.next || defaultIcons.horizontal.next,\n      search: configIcons.search || defaultIcons.search\n    };\n  }\n\n  /** Get icon for previous button */\n  get prevIcon(): string {\n    return this.getNavigationIcons().prev;\n  }\n\n  /** Get icon for next button */\n  get nextIcon(): string {\n    return this.getNavigationIcons().next;\n  }\n\n  /** Get icon for search button */\n  get searchIcon(): string {\n    return this.getNavigationIcons().search;\n  }\n\n  /** Get icon styles based on button configuration */\n  get nextIconStyles(): Record<string, string> {\n    const buttonStyles = this.config.navigationStyle?.nextButton || {};\n    return {\n      color: buttonStyles['color'] || '#666'\n    };\n  }\n\n  /** Get icon styles based on button configuration */\n  get prevIconStyles(): Record<string, string> {\n    const buttonStyles = this.config.navigationStyle?.prevButton || {};\n    return {\n      color: buttonStyles['color'] || '#666'\n    };\n  }\n\n  /** Get icon styles based on button configuration */\n  get searchIconStyles(): Record<string, string> {\n    const buttonStyles = this.config.searchStyle?.button || {};\n    return {\n      color: buttonStyles['color'] || '#666'\n    };\n  }\n\n  /** Get whether navigation should be shown */\n  get showNavigation(): boolean {\n    return this.config.showNavigation ?? true;\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CarouselComponent } from './carousel.component';\n\n@NgModule({\n  declarations: [CarouselComponent],\n  imports: [CommonModule, FormsModule],\n  exports: [CarouselComponent],\n})\nexport class NgSmoothCarouselModule {}\n","/*\n * Public API Surface of ng-smooth-carousel\n */\n\n// Component and Module exports\nexport * from './lib/carousel.component';\nexport * from './lib/carousel.module';\n\n// Interface exports\nexport * from './lib/carousel-config.interface';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BG;MA8GU,iBAAiB,CAAA;AAuC5B,IAAA,WAAA,CAAoB,GAAsB,EAAA;AAAtB,QAAA,IAAG,CAAA,GAAA,GAAH,GAAG,CAAmB;AAtCjC,QAAA,IAAK,CAAA,KAAA,GAAU,EAAE,CAAC;AAClB,QAAA,IAAM,CAAA,MAAA,GAAmB,EAAE,CAAC;AAO7B,QAAA,IAAgB,CAAA,gBAAA,GAAG,CAAC,CAAC;AACrB,QAAA,IAAY,CAAA,YAAA,GAAG,CAAC,CAAC;AACjB,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;AAE/B,QAAA,IAAU,CAAA,UAAA,GAAa,EAAE,CAAC;QAEjB,IAAA,CAAA,aAAa,GAA2B;AACvD,YAAA,IAAI,EAAE,EAAE;AACR,YAAA,IAAI,EAAE,GAAG;AACT,YAAA,IAAI,EAAE,GAAG;AACT,YAAA,IAAI,EAAE,GAAG;AACT,YAAA,IAAI,EAAE,GAAG;AACT,YAAA,KAAK,EAAE,GAAG;AACV,YAAA,KAAK,EAAE,GAAG;AACV,YAAA,KAAK,EAAE,GAAG;AACV,YAAA,KAAK,EAAE,GAAG;AACV,YAAA,KAAK,EAAE,GAAG;AACV,YAAA,KAAK,EAAE,GAAG;AACV,YAAA,KAAK,EAAE,GAAG;AACV,YAAA,KAAK,EAAE,GAAG;AACV,YAAA,MAAM,EAAE,GAAG;AACX,YAAA,MAAM,EAAE,CAAC;SACV,CAAC;AAEF,QAAA,IAAc,CAAA,cAAA,GAAG,KAAK,CAAC;AACvB,QAAA,IAAc,CAAA,cAAA,GAAG,KAAK,CAAC;AACvB,QAAA,IAAW,CAAA,WAAA,GAAG,EAAE,CAAC;AACjB,QAAA,IAAiB,CAAA,iBAAA,GAAG,KAAK,CAAC;AAC1B,QAAA,IAAa,CAAA,aAAA,GAAU,EAAE,CAAC;KAEoB;IAE9C,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;KACjC;AAEO,IAAA,aAAa,CAAC,IAAY,EAAA;AAChC,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AACvB,YAAA,OAAO,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACxC,SAAA;AACD,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;AACtB,YAAA,OAAO,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AAC7C,SAAA;AACD,QAAA,OAAO,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;KAC3B;IAEO,aAAa,GAAA;QACnB,IAAI,IAAI,CAAC,gBAAgB,EAAE;AACzB,YAAA,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACtC,SAAA;AAED,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ;YAAE,OAAO;AAElC,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,QAAQ,CAAC,CAAC;AAExE,QAAA,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC,MAAK;;YACvC,MAAM,KAAK,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,aAAa,CAAC;YAC/C,MAAM,OAAO,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,aAAa,CAAC;AAEnD,YAAA,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO;gBAAE,OAAO;AAE/B,YAAA,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU;AAClC,kBAAE,KAAK,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY;kBACzC,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;AAE5C,YAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,YAAY,EAAE;AACzC,gBAAA,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;AACpB,oBAAA,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;AAC3B,iBAAA;AAAM,qBAAA;AACL,oBAAA,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;oBACrC,OAAO;AACR,iBAAA;AACF,aAAA;AAAM,iBAAA;gBACL,IAAI,CAAC,IAAI,EAAE,CAAC;AACb,aAAA;AACD,YAAA,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;SAC1B,EAAE,KAAK,CAAC,CAAC;KACX;IAED,eAAe,GAAA;QACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,UAAU,CAAC,MAAK;YACd,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;AACvB,SAAC,CAAC,CAAC;KACJ;IAED,WAAW,GAAA;QACT,IAAI,IAAI,CAAC,gBAAgB,EAAE;AACzB,YAAA,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACtC,SAAA;AACD,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AACrB,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KAC1B;AAED,IAAA,IAAI,UAAU,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,KAAK,UAAU,CAAC;KAC/C;AAED,IAAA,IAAI,eAAe,GAAA;QACjB,OAAO;AACL,YAAA,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,MAAM;AAC3C,YAAA,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,IAAI,MAAM;SAC9C,CAAC;KACH;AAED,IAAA,IAAI,WAAW,GAAA;AACb,QAAA,MAAM,UAAU,GAAG;YACjB,SAAS,EAAE,IAAI,CAAC,UAAU;AACxB,kBAAE,CAAA,YAAA,EAAe,IAAI,CAAC,gBAAgB,CAAK,GAAA,CAAA;AAC3C,kBAAE,CAAA,YAAA,EAAe,IAAI,CAAC,gBAAgB,CAAK,GAAA,CAAA;SAC9C,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU;cACnB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,UAAU,CAAA,EAAA,EAAE,aAAa,EAAE,QAAQ,EAC1C,CAAA,GAAE,UAAU,CAAC;KAChB;IAEO,kBAAkB,GAAA;QACxB,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,cAAc;YAAE,OAAO;AAEvD,QAAA,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAEO,mBAAmB,GAAA;AACzB,QAAA,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC;AACxB,aAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACjD,SAAS,CAAC,MAAK;YACd,IAAI,CAAC,aAAa,EAAE,CAAC;AACvB,SAAC,CAAC,CAAC;KACN;IAEO,aAAa,GAAA;;AACnB,QAAA,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;AACxB,YAAA,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;AAC5B,YAAA,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,OAAO;AACR,SAAA;QAED,MAAM,KAAK,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,aAAa,CAAC;QAC/C,MAAM,OAAO,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,aAAa,CAAC;AAEnD,QAAA,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO;YAAE,OAAO;AAE/B,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE;YACnC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AAC5C,YAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;AACzE,SAAA;aAAM,IAAI,IAAI,CAAC,UAAU,EAAE;YAC1B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;AAChD,YAAA,IAAI,CAAC,cAAc;gBACjB,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC,YAAY,CAAC;AACrE,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;AAChD,YAAA,IAAI,CAAC,cAAc;gBACjB,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC,WAAW,CAAC;AACnE,SAAA;AAED,QAAA,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;KAC1B;IAEO,mBAAmB,GAAA;QACzB,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,cAAc;YAAE,OAAO;AAEvD,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;AAC9C,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC;QAClD,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAkB,CAAC;;AAG1D,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE;;AAEvE,YAAA,MAAM,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;AACxC,YAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,WAAW,CAAC,CAAC;YAC/C,OAAO;AACR,SAAA;QAED,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,IAAG;;YAEjC,MAAM,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAC5C,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;AAC/B,YAAA,MAAM,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,UAAU,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC;AACzD,YAAA,MAAM,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,WAAW,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC;AAE3D,YAAA,OAAO,KAAK,GAAG,UAAU,GAAG,WAAW,CAAC;AAC1C,SAAC,CAAC,CAAC;KACJ;IAEO,eAAe,GAAA;AACrB,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACjE,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBAC9C,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAC3C,aAAA;;AAED,YAAA,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,WAAW,CAAC;AAC5E,SAAA;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC;;QAG5C,IAAI,IAAI,KAAK,MAAM,EAAE;;AAEnB,YAAA,OAAO,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,WAAW,CAAC;AACtD,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;KAC7D;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE;AACnC,YAAA,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;gBACzB,IAAI,CAAC,YAAY,EAAE,CAAC;;AAEpB,gBAAA,IAAI,IAAI,CAAC,YAAY,KAAK,CAAC,EAAE;;AAE3B,oBAAA,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;AAC3B,iBAAA;AAAM,qBAAA;;AAEL,oBAAA,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,WAAW,CAAC;;oBAGtG,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO;wBAClC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;AAE1D,oBAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,IAAI,SAAS,GAAG,QAAQ,CAAC,CAAC;AACpE,iBAAA;AACF,aAAA;AACF,SAAA;AAAM,aAAA;AACL,YAAA,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AAC5C,YAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,CAAC;AAC3E,SAAA;QACD,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,IAAI,GAAA;AACF,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;AAC9C,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC;AAElD,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE;YACnC,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;;AAErD,gBAAA,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,WAAW,CAAC;;gBAG5E,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO;oBAClC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;gBAE1D,IAAI,CAAC,YAAY,EAAE,CAAC;;AAGpB,gBAAA,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,MAAM,EAAE;;AAEpC,oBAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,IAAI,SAAS,GAAG,QAAQ,CAAC,CAAC;AACpE,iBAAA;AAAM,qBAAA;;AAEL,oBAAA,IAAI,CAAC,gBAAgB,IAAI,SAAS,GAAG,QAAQ,CAAC;AAC/C,iBAAA;AACF,aAAA;AACF,SAAA;AAAM,aAAA;AACL,YAAA,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AAC5C,YAAA,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU;AAClC,kBAAE,KAAK,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY;kBACzC,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;AAE5C,YAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAC9B,YAAY,EACZ,IAAI,CAAC,gBAAgB,GAAG,YAAY,CACrC,CAAC;AACH,SAAA;QACD,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;AAED;;;;AAIG;IACK,oBAAoB,GAAA;;QAC1B,MAAM,KAAK,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,eAAe,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,CAAC;;AAGvD,QAAA,IAAI,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,eAAe,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,cAAc,CAAC;aACzD,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,eAAe,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,cAAc,CAAC,CAAA;AACzD,aAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,WAAW,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,cAAc,CAAC,CAAA,EAAE;AACrD,YAAA,OAAO,CAAC,IAAI,CAAC,8EAA8E,CAAC,CAAC;AAC9F,SAAA;AAED,QAAA,QAAQ,KAAK;AACX,YAAA,KAAK,QAAQ;AACX,gBAAA,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;AACjC,YAAA,KAAK,SAAS;AACZ,gBAAA,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;AACjC,YAAA,KAAK,QAAQ,CAAC;AACd,YAAA;AACE,gBAAA,OAAO,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC;AAChC,SAAA;KACF;AAED;;;AAGG;AACH,IAAA,IAAI,gBAAgB,GAAA;;AAClB,QAAA,MAAM,YAAY,GAAQ,MAAA,CAAA,MAAA,CAAA,EAAA,GAAC,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,eAAe,0CAAE,UAAU,KAAI,EAAE,EAAG,CAAC;AAC5E,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;;QAGhD,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,eAAe,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,KAAI,YAAY,EAAE;AAC5D,YAAA,OAAO,YAAY,CAAC,cAAc,CAAC,CAAC;AACrC,SAAA;QAED,OACK,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,WAAW,CACX,EAAA,YAAY,CACf,CAAA;KACH;AAED;;;AAGG;AACH,IAAA,IAAI,gBAAgB,GAAA;;AAClB,QAAA,MAAM,YAAY,GAAQ,MAAA,CAAA,MAAA,CAAA,EAAA,GAAC,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,eAAe,0CAAE,UAAU,KAAI,EAAE,EAAG,CAAC;AAC5E,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;;QAGhD,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,eAAe,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,KAAI,YAAY,EAAE;AAC5D,YAAA,OAAO,YAAY,CAAC,cAAc,CAAC,CAAC;AACrC,SAAA;QAED,OACK,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,WAAW,CACX,EAAA,YAAY,CACf,CAAA;KACH;AAED;;;AAGG;AACH,IAAA,IAAI,kBAAkB,GAAA;;AACpB,QAAA,MAAM,YAAY,GAAQ,MAAA,CAAA,MAAA,CAAA,EAAA,GAAC,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,WAAW,0CAAE,MAAM,KAAI,EAAE,EAAG,CAAC;AACpE,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;;QAGhD,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,eAAe,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,KAAI,YAAY,EAAE;AAC5D,YAAA,OAAO,YAAY,CAAC,cAAc,CAAC,CAAC;AACrC,SAAA;QAED,OACK,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,WAAW,CACX,EAAA,YAAY,CACf,CAAA;KACH;;AAGD,IAAA,YAAY,CAAC,KAAa,EAAA;AACxB,QAAA,MAAM,UAAU,GAA2B;AACzC,YAAA,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,OAAO;AACvC,YAAA,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,MAAM;AACxC,YAAA,UAAU,EAAE,GAAG;AACf,YAAA,QAAQ,EAAE,GAAG;AACb,YAAA,SAAS,EAAE,YAAY;SACxB,CAAC;;AAGF,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE;AACvE,YAAA,UAAU,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC;AAC7B,YAAA,UAAU,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC;AACjC,SAAA;AAED,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO;AAAE,YAAA,OAAO,UAAU,CAAC;AAE5C,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,GAAG,WAAW,GAAG,YAAY,CAAC;QACpE,OACK,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,UAAU,KACb,CAAC,cAAc,GAAG,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EACzD,CAAA,CAAA;KACH;AAED,IAAA,IAAI,cAAc,GAAA;AAChB,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,KAAK,CAAC;KAC5C;AAED,IAAA,IAAI,iBAAiB,GAAA;AACnB,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,iBAAiB,IAAI,OAAO,CAAC;KACjD;AAED,IAAA,IAAI,eAAe,GAAA;AACjB,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,IAAI,MAAM,CAAC;KAC9C;AAED,IAAA,IAAI,UAAU,GAAA;;QACZ,OAAO,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,KAAK,CAAC;KAC1C;AAED,IAAA,IAAI,iBAAiB,GAAA;AACnB,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,iBAAiB,IAAI,WAAW,CAAC;KACrD;AAED,IAAA,IAAI,gBAAgB,GAAA;AAClB,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,gBAAgB,IAAI,cAAc,CAAC;KACvD;AAED,IAAA,IAAI,iBAAiB,GAAA;;QACnB,OAAO,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,WAAW,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,KAAI,EAAE,CAAC;KAC7C;IAED,iBAAiB,GAAA;AACf,QAAA,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;AACjD,QAAA,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,WAAW,EAAE;YAC9C,UAAU,CAAC,MAAK;AACd,gBAAA,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AACzC,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;IAED,gBAAgB,GAAA;AACd,QAAA,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;KAChC;IAED,WAAW,GAAA;QACT,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAEpD,IAAI,CAAC,KAAK,EAAE;AACV,YAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;AACjC,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,KAAI;AAC9C,gBAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;oBAC5B,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC3C,iBAAA;AACD,gBAAA,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAC7B,CAAC,KAAK,KACJ,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CACnE,CAAC;AACJ,aAAC,CAAC,CAAC;AACJ,SAAA;AAED,QAAA,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;AAC1B,QAAA,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;AAGD,IAAA,kBAAkB,CAAC,KAAiB,EAAA;QAClC,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAC/D,IACE,IAAI,CAAC,iBAAiB;YACtB,eAAe;YACf,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAc,CAAC,EAC/C;YACA,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACzB,SAAA;KACF;IAED,kBAAkB,GAAA;AAChB,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;KAC7B;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;AACtB,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;AAChC,QAAA,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;AAC1B,QAAA,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;;QAGtB,UAAU,CAAC,MAAK;YACd,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;AACvB,SAAC,CAAC,CAAC;KACJ;;IAGO,kBAAkB,GAAA;;AACxB,QAAA,MAAM,YAAY,GAAG;YACnB,UAAU,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE;YACpC,QAAQ,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE;AAClC,YAAA,MAAM,EAAE,IAAI;SACb,CAAC;AAEF,QAAA,MAAM,WAAW,GAAG,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,eAAe,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,KAAI,EAAE,CAAC;AAC7D,QAAA,MAAM,aAAa,GAAG,WAAW,CAAC,QAAQ,IAAI,EAAE,CAAC;QAEjD,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,OAAO;gBACL,IAAI,EAAE,aAAa,CAAC,IAAI,IAAI,YAAY,CAAC,QAAQ,CAAC,IAAI;gBACtD,IAAI,EAAE,aAAa,CAAC,IAAI,IAAI,YAAY,CAAC,QAAQ,CAAC,IAAI;AACtD,gBAAA,MAAM,EAAE,WAAW,CAAC,MAAM,IAAI,YAAY,CAAC,MAAM;aAClD,CAAC;AACH,SAAA;QAED,OAAO;YACL,IAAI,EAAE,WAAW,CAAC,IAAI,IAAI,YAAY,CAAC,UAAU,CAAC,IAAI;YACtD,IAAI,EAAE,WAAW,CAAC,IAAI,IAAI,YAAY,CAAC,UAAU,CAAC,IAAI;AACtD,YAAA,MAAM,EAAE,WAAW,CAAC,MAAM,IAAI,YAAY,CAAC,MAAM;SAClD,CAAC;KACH;;AAGD,IAAA,IAAI,QAAQ,GAAA;AACV,QAAA,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC;KACvC;;AAGD,IAAA,IAAI,QAAQ,GAAA;AACV,QAAA,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC;KACvC;;AAGD,IAAA,IAAI,UAAU,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC,MAAM,CAAC;KACzC;;AAGD,IAAA,IAAI,cAAc,GAAA;;AAChB,QAAA,MAAM,YAAY,GAAG,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,eAAe,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,KAAI,EAAE,CAAC;QACnE,OAAO;AACL,YAAA,KAAK,EAAE,YAAY,CAAC,OAAO,CAAC,IAAI,MAAM;SACvC,CAAC;KACH;;AAGD,IAAA,IAAI,cAAc,GAAA;;AAChB,QAAA,MAAM,YAAY,GAAG,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,eAAe,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,KAAI,EAAE,CAAC;QACnE,OAAO;AACL,YAAA,KAAK,EAAE,YAAY,CAAC,OAAO,CAAC,IAAI,MAAM;SACvC,CAAC;KACH;;AAGD,IAAA,IAAI,gBAAgB,GAAA;;AAClB,QAAA,MAAM,YAAY,GAAG,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,WAAW,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,KAAI,EAAE,CAAC;QAC3D,OAAO;AACL,YAAA,KAAK,EAAE,YAAY,CAAC,OAAO,CAAC,IAAI,MAAM;SACvC,CAAC;KACH;;AAGD,IAAA,IAAI,cAAc,GAAA;;QAChB,OAAO,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,cAAc,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,IAAI,CAAC;KAC3C;;8GAxiBU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,iBAAiB,EA3GlB,QAAA,EAAA,KAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,gBAAA,EAAA,4BAAA,EAAA,EAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,cAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,cAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,cAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,OAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,SAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,aAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,aAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6ET,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,0uEAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,EAAA,0BAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,qDAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FA8BU,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBA7G7B,SAAS;YACE,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,KAAK,EACL,QAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6ET,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,0uEAAA,CAAA,EAAA,CAAA;wGA+BQ,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,MAAM,EAAA,CAAA;sBAAd,KAAK;gBAEwB,YAAY,EAAA,CAAA;sBAAzC,YAAY;uBAAC,cAAc,CAAA;gBACR,YAAY,EAAA,CAAA;sBAA/B,SAAS;uBAAC,OAAO,CAAA;gBACI,cAAc,EAAA,CAAA;sBAAnC,SAAS;uBAAC,SAAS,CAAA;gBACM,WAAW,EAAA,CAAA;sBAApC,SAAS;uBAAC,aAAa,CAAA;gBAicxB,kBAAkB,EAAA,CAAA;sBADjB,YAAY;uBAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAA;;;MC1lB/B,sBAAsB,CAAA;;mHAAtB,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,iBAJlB,iBAAiB,CAAA,EAAA,OAAA,EAAA,CACtB,YAAY,EAAE,WAAW,aACzB,iBAAiB,CAAA,EAAA,CAAA,CAAA;oHAEhB,sBAAsB,EAAA,OAAA,EAAA,CAHvB,YAAY,EAAE,WAAW,CAAA,EAAA,CAAA,CAAA;2FAGxB,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBALlC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,iBAAiB,CAAC;AACjC,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,WAAW,CAAC;oBACpC,OAAO,EAAE,CAAC,iBAAiB,CAAC;iBAC7B,CAAA;;;ACTD;;AAEG;;ACFH;;AAEG;;;;"}}}